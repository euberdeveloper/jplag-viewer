id,type,token,location,code
1,TRANSLATIONUNITDECLARATION,"/data/00000019/submissions/01485294_Sociologia_up201107735/Sociologia.java",,""
2,RECORDDECLARATION,"Arco",Sociologia.java(2:1-9:2),"class Arco {
	int peso;
	int aponta;
	Arco(int p,int a){
		peso=p;
		aponta=a;
	}
}"
3,RECORDDECLARATION,"Grafo",Sociologia.java(10:1-78:2),"class Grafo {
	 
	int sizeV;
	int sizeA;	
	Vertex vertex[];
	int visitado[];
	
class Vertex{
	LinkedList <Arco> arestas;
	
	Vertex(){
		arestas= new LinkedList<Arco>();
	}
}

	Grafo(int tamanho){
		sizeV=tamanho;
		vertex = new Vertex[tamanho];
		visitado = new int[tamanho];  //0->por visitar, 1->visitado, 2->fexado
		for(int i =0;i<tamanho;i++){
			vertex[i]=new Vertex();
			visitado[i]=0;
		}
	}
	
	public void AddArco(int were,int p,int a){ //Adiciona arco
		vertex[were].arestas.add(new Arco(p,a));
		sizeA++;
	}

	public int Vertices(){
		return sizeV;
	}

	public int Arcos(){
		return sizeA;
	}
	
	boolean existeA(int a, int b){
		ListIterator<Arco> iterador = vertex[a].arestas.listIterator();
		while(iterador.hasNext())
			if(iterador.next().aponta==b)
				return true;
	return false;					
	}
	
	String existeS(String xpto){ //VERIFICA A EXISTENCIA DE UM ARCO QUE UNE DUAS LETRAS
		for(int i=0;i<xpto.length()-1;i++){
			int vert = xpto.charAt(i)-'A';
			int aresta=xpto.charAt(i+1)-'A';
		if(!existeA(vert,aresta))
			return ""nï¿½o"";	
		}
		return ""sim"";
	}
	
	int post (int a){
		int count =1;
		visitado[a]=1;
		ListIterator<Arco> iterador = vertex[a].arestas.listIterator();
		while(iterador.hasNext()){
			int temp = iterador.next().aponta;
			if(visitado[temp]==0)
				count += post(temp);
			
		}
		return count;
	}
}"
4,RECORDDECLARATION,"Sociologia",Sociologia.java(80:1-150:2),"class Sociologia{ 

	static void DFS(Grafo xpto,int v){ 
		xpto.visitado[v]=1;
		ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();
		while(iterador.hasNext()){   //n
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				DFS(xpto,aux);
		}
		fexado.push(v);
	}

	static int DFS1(Grafo xpto,int v){
		xpto.visitado[v]=1;
		ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();
		int count=1;
		while(iterador.hasNext()){
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				count += DFS1(xpto,aux);
		}
		return count;
	}


	static Stack<Integer> fexado = new Stack<Integer>();

	public static void main(String Args[]){
		Scanner ler = new Scanner(System.in);
		StringBuilder output=new StringBuilder();
		int casos = ler.nextInt();
		
		for(int lim=0;lim<casos;lim++){
			int npessoas=ler.nextInt();
			Grafo amigos = new Grafo(npessoas);
			Grafo amigos1 = new Grafo(npessoas);
			for(int i=0;i<npessoas;i++){ //n
				int amigo= ler.nextInt();
				int namigos=ler.nextInt();
				for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}
			}//n.2k
			for(int i =0;i<amigos.sizeV;i++) //n.2k + 2n
				if(amigos.visitado[i]==0)
					DFS(amigos,i);

			output.append(String.format(""Caso #%d\n"",lim+1));
			int grupos=0;
			int solos=0;

			while(!fexado.isEmpty()){ // n.2k + 4n
				int aux = fexado.pop();
				if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}
			}
			output.append(String.format(""%d %d\n"",grupos,solos));
		}

		System.out.print(output);
		ler.close();
	}
}"
5,INCLUDEDECLARATION,"java.util",,""
6,FIELDDECLARATION,"this",,""
7,FIELDDECLARATION,"fexado",Sociologia.java(106:2-106:54),"fexado = new Stack<Integer>()"
8,METHODDECLARATION,"DFS",Sociologia.java(82:2-91:3),"static void DFS(Grafo xpto,int v){ 
		xpto.visitado[v]=1;
		ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();
		while(iterador.hasNext()){   //n
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				DFS(xpto,aux);
		}
		fexado.push(v);
	}"
9,METHODDECLARATION,"DFS1",Sociologia.java(93:2-103:3),"static int DFS1(Grafo xpto,int v){
		xpto.visitado[v]=1;
		ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();
		int count=1;
		while(iterador.hasNext()){
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				count += DFS1(xpto,aux);
		}
		return count;
	}"
10,METHODDECLARATION,"main",Sociologia.java(108:2-149:3),"public static void main(String Args[]){
		Scanner ler = new Scanner(System.in);
		StringBuilder output=new StringBuilder();
		int casos = ler.nextInt();
		
		for(int lim=0;lim<casos;lim++){
			int npessoas=ler.nextInt();
			Grafo amigos = new Grafo(npessoas);
			Grafo amigos1 = new Grafo(npessoas);
			for(int i=0;i<npessoas;i++){ //n
				int amigo= ler.nextInt();
				int namigos=ler.nextInt();
				for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}
			}//n.2k
			for(int i =0;i<amigos.sizeV;i++) //n.2k + 2n
				if(amigos.visitado[i]==0)
					DFS(amigos,i);

			output.append(String.format(""Caso #%d\n"",lim+1));
			int grupos=0;
			int solos=0;

			while(!fexado.isEmpty()){ // n.2k + 4n
				int aux = fexado.pop();
				if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}
			}
			output.append(String.format(""%d %d\n"",grupos,solos));
		}

		System.out.print(output);
		ler.close();
	}"
11,CONSTRUCTORDECLARATION,"Sociologia",,""
12,VARIABLEDECLARATION,"this",,""
13,COMPOUNDSTATEMENT,"",Sociologia.java(93:35-103:3),"{
		xpto.visitado[v]=1;
		ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();
		int count=1;
		while(iterador.hasNext()){
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				count += DFS1(xpto,aux);
		}
		return count;
	}"
14,PARAMVARIABLEDECLARATION,"xpto",Sociologia.java(93:18-93:28),"Grafo xpto"
15,PARAMVARIABLEDECLARATION,"v",Sociologia.java(93:29-93:34),"int v"
16,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(94:3-94:7),"xpto"
17,RETURNSTATEMENT,"",Sociologia.java(102:3-102:16),"return count;"
18,BINARYOPERATOR,"=",Sociologia.java(94:3-94:22),"xpto.visitado[v]=1;"
19,DECLARATIONSTATEMENT,"",Sociologia.java(95:3-95:71),"ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();"
20,DECLARATIONSTATEMENT,"",Sociologia.java(96:3-96:15),"int count=1;"
21,WHILESTATEMENT,"",Sociologia.java(97:3-101:4),"while(iterador.hasNext()){
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				count += DFS1(xpto,aux);
		}"
22,VARIABLEDECLARATION,"iterador",Sociologia.java(95:22-95:70),"iterador = xpto.vertex[v].arestas.listIterator()"
23,VARIABLEDECLARATION,"count",Sociologia.java(96:7-96:14),"count=1"
24,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(94:3-94:19),"xpto.visitado[v]"
25,LITERAL,"",Sociologia.java(94:20-94:21),"1"
26,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(95:33-95:37),"xpto"
27,MEMBEREXPRESSION,"visitado",Sociologia.java(94:3-94:16),"xpto.visitado"
28,DECLAREDREFERENCEEXPRESSION,"v",Sociologia.java(94:17-94:18),"v"
29,DECLAREDREFERENCEEXPRESSION,"count",Sociologia.java(102:10-102:15),"count"
30,MEMBERCALLEXPRESSION,"hasNext",Sociologia.java(97:9-97:27),"iterador.hasNext()"
31,COMPOUNDSTATEMENT,"",Sociologia.java(97:28-101:4),"{
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				count += DFS1(xpto,aux);
		}"
32,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(98:14-98:22),"iterador"
33,DECLARATIONSTATEMENT,"",Sociologia.java(98:4-98:37),"int aux = iterador.next().aponta;"
34,IFSTATEMENT,"",Sociologia.java(99:4-100:29),"if(xpto.visitado[aux]==0)
				count += DFS1(xpto,aux);"
35,VARIABLEDECLARATION,"aux",Sociologia.java(98:8-98:36),"aux = iterador.next().aponta"
36,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(97:9-97:17),"iterador"
37,BINARYOPERATOR,"+=",Sociologia.java(100:5-100:29),"count += DFS1(xpto,aux);"
38,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(99:7-99:11),"xpto"
39,MEMBEREXPRESSION,"aponta",Sociologia.java(98:14-98:36),"iterador.next().aponta"
40,MEMBERCALLEXPRESSION,"next",Sociologia.java(98:14-98:29),"iterador.next()"
41,DECLAREDREFERENCEEXPRESSION,"next",Sociologia.java(98:23-98:27),"next"
42,BINARYOPERATOR,"==",Sociologia.java(99:7-99:28),"xpto.visitado[aux]==0"
43,DECLAREDREFERENCEEXPRESSION,"count",Sociologia.java(100:5-100:10),"count"
44,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(99:7-99:25),"xpto.visitado[aux]"
45,LITERAL,"",Sociologia.java(99:27-99:28),"0"
46,MEMBEREXPRESSION,"visitado",Sociologia.java(99:7-99:20),"xpto.visitado"
47,DECLAREDREFERENCEEXPRESSION,"aux",Sociologia.java(99:21-99:24),"aux"
48,CALLEXPRESSION,"DFS1",Sociologia.java(100:14-100:28),"DFS1(xpto,aux)"
49,METHODDECLARATION,"DFS1",,""
50,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(100:19-100:23),"xpto"
51,DECLAREDREFERENCEEXPRESSION,"aux",Sociologia.java(100:24-100:27),"aux"
52,PARAMVARIABLEDECLARATION,"grafo0",,""
53,PARAMVARIABLEDECLARATION,"int1",,""
54,DECLAREDREFERENCEEXPRESSION,"hasNext",Sociologia.java(97:18-97:25),"hasNext"
55,MEMBERCALLEXPRESSION,"listIterator",Sociologia.java(95:33-95:70),"xpto.vertex[v].arestas.listIterator()"
56,DECLAREDREFERENCEEXPRESSION,"listIterator",Sociologia.java(95:56-95:68),"listIterator"
57,MEMBEREXPRESSION,"arestas",Sociologia.java(95:33-95:55),"xpto.vertex[v].arestas"
58,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(95:33-95:47),"xpto.vertex[v]"
59,MEMBEREXPRESSION,"vertex",Sociologia.java(95:33-95:44),"xpto.vertex"
60,DECLAREDREFERENCEEXPRESSION,"v",Sociologia.java(95:45-95:46),"v"
61,LITERAL,"",Sociologia.java(96:13-96:14),"1"
62,NEWEXPRESSION,"",Sociologia.java(106:33-106:53),"new Stack<Integer>()"
63,CONSTRUCTEXPRESSION,"",Sociologia.java(106:33-106:53),"new Stack<Integer>()"
64,VARIABLEDECLARATION,"this",,""
65,COMPOUNDSTATEMENT,"",Sociologia.java(108:40-149:3),"{
		Scanner ler = new Scanner(System.in);
		StringBuilder output=new StringBuilder();
		int casos = ler.nextInt();
		
		for(int lim=0;lim<casos;lim++){
			int npessoas=ler.nextInt();
			Grafo amigos = new Grafo(npessoas);
			Grafo amigos1 = new Grafo(npessoas);
			for(int i=0;i<npessoas;i++){ //n
				int amigo= ler.nextInt();
				int namigos=ler.nextInt();
				for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}
			}//n.2k
			for(int i =0;i<amigos.sizeV;i++) //n.2k + 2n
				if(amigos.visitado[i]==0)
					DFS(amigos,i);

			output.append(String.format(""Caso #%d\n"",lim+1));
			int grupos=0;
			int solos=0;

			while(!fexado.isEmpty()){ // n.2k + 4n
				int aux = fexado.pop();
				if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}
			}
			output.append(String.format(""%d %d\n"",grupos,solos));
		}

		System.out.print(output);
		ler.close();
	}"
66,PARAMVARIABLEDECLARATION,"Args",Sociologia.java(108:26-108:39),"String Args[]"
67,DECLAREDREFERENCEEXPRESSION,"System",Sociologia.java(109:29-109:35),"System"
68,RETURNSTATEMENT,"",,""
69,DECLARATIONSTATEMENT,"",Sociologia.java(109:3-109:40),"Scanner ler = new Scanner(System.in);"
70,DECLARATIONSTATEMENT,"",Sociologia.java(110:3-110:44),"StringBuilder output=new StringBuilder();"
71,DECLARATIONSTATEMENT,"",Sociologia.java(111:3-111:29),"int casos = ler.nextInt();"
72,FORSTATEMENT,"",Sociologia.java(113:3-145:4),"for(int lim=0;lim<casos;lim++){
			int npessoas=ler.nextInt();
			Grafo amigos = new Grafo(npessoas);
			Grafo amigos1 = new Grafo(npessoas);
			for(int i=0;i<npessoas;i++){ //n
				int amigo= ler.nextInt();
				int namigos=ler.nextInt();
				for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}
			}//n.2k
			for(int i =0;i<amigos.sizeV;i++) //n.2k + 2n
				if(amigos.visitado[i]==0)
					DFS(amigos,i);

			output.append(String.format(""Caso #%d\n"",lim+1));
			int grupos=0;
			int solos=0;

			while(!fexado.isEmpty()){ // n.2k + 4n
				int aux = fexado.pop();
				if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}
			}
			output.append(String.format(""%d %d\n"",grupos,solos));
		}"
73,MEMBERCALLEXPRESSION,"print",Sociologia.java(147:3-147:28),"System.out.print(output);"
74,MEMBERCALLEXPRESSION,"close",Sociologia.java(148:3-148:15),"ler.close();"
75,VARIABLEDECLARATION,"ler",Sociologia.java(109:11-109:39),"ler = new Scanner(System.in)"
76,VARIABLEDECLARATION,"output",Sociologia.java(110:17-110:43),"output=new StringBuilder()"
77,VARIABLEDECLARATION,"casos",Sociologia.java(111:7-111:28),"casos = ler.nextInt()"
78,DECLAREDREFERENCEEXPRESSION,"ler",Sociologia.java(111:15-111:18),"ler"
79,CONSTRUCTEXPRESSION,"",Sociologia.java(110:24-110:43),"new StringBuilder()"
80,DECLAREDREFERENCEEXPRESSION,"print",Sociologia.java(147:14-147:19),"print"
81,DECLAREDREFERENCEEXPRESSION,"ler",Sociologia.java(148:3-148:6),"ler"
82,DECLAREDREFERENCEEXPRESSION,"output",Sociologia.java(147:20-147:26),"output"
83,MEMBEREXPRESSION,"out",Sociologia.java(147:3-147:13),"System.out"
84,DECLAREDREFERENCEEXPRESSION,"System",Sociologia.java(147:3-147:9),"System"
85,LITERAL,"",Sociologia.java(113:15-113:16),"0"
86,COMPOUNDSTATEMENT,"",Sociologia.java(113:33-145:4),"{
			int npessoas=ler.nextInt();
			Grafo amigos = new Grafo(npessoas);
			Grafo amigos1 = new Grafo(npessoas);
			for(int i=0;i<npessoas;i++){ //n
				int amigo= ler.nextInt();
				int namigos=ler.nextInt();
				for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}
			}//n.2k
			for(int i =0;i<amigos.sizeV;i++) //n.2k + 2n
				if(amigos.visitado[i]==0)
					DFS(amigos,i);

			output.append(String.format(""Caso #%d\n"",lim+1));
			int grupos=0;
			int solos=0;

			while(!fexado.isEmpty()){ // n.2k + 4n
				int aux = fexado.pop();
				if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}
			}
			output.append(String.format(""%d %d\n"",grupos,solos));
		}"
87,DECLARATIONSTATEMENT,"",Sociologia.java(113:7-113:16),"int lim=0"
88,BINARYOPERATOR,"<",Sociologia.java(113:17-113:26),"lim<casos"
89,UNARYOPERATOR,"++",Sociologia.java(113:27-113:32),"lim++"
90,VARIABLEDECLARATION,"lim",Sociologia.java(113:11-113:16),"lim=0"
91,DECLAREDREFERENCEEXPRESSION,"ler",Sociologia.java(114:17-114:20),"ler"
92,DECLAREDREFERENCEEXPRESSION,"lim",Sociologia.java(113:27-113:30),"lim"
93,DECLAREDREFERENCEEXPRESSION,"lim",Sociologia.java(113:17-113:20),"lim"
94,DECLAREDREFERENCEEXPRESSION,"casos",Sociologia.java(113:21-113:26),"casos"
95,DECLARATIONSTATEMENT,"",Sociologia.java(114:4-114:31),"int npessoas=ler.nextInt();"
96,DECLARATIONSTATEMENT,"",Sociologia.java(115:4-115:39),"Grafo amigos = new Grafo(npessoas);"
97,DECLARATIONSTATEMENT,"",Sociologia.java(116:4-116:40),"Grafo amigos1 = new Grafo(npessoas);"
98,FORSTATEMENT,"",Sociologia.java(117:4-125:5),"for(int i=0;i<npessoas;i++){ //n
				int amigo= ler.nextInt();
				int namigos=ler.nextInt();
				for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}
			}"
99,FORSTATEMENT,"",Sociologia.java(126:4-128:20),"for(int i =0;i<amigos.sizeV;i++) //n.2k + 2n
				if(amigos.visitado[i]==0)
					DFS(amigos,i);"
100,MEMBERCALLEXPRESSION,"append",Sociologia.java(130:4-130:53),"output.append(String.format(""Caso #%d\n"",lim+1));"
101,DECLARATIONSTATEMENT,"",Sociologia.java(131:4-131:17),"int grupos=0;"
102,DECLARATIONSTATEMENT,"",Sociologia.java(132:4-132:16),"int solos=0;"
103,WHILESTATEMENT,"",Sociologia.java(134:4-143:5),"while(!fexado.isEmpty()){ // n.2k + 4n
				int aux = fexado.pop();
				if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}
			}"
104,MEMBERCALLEXPRESSION,"append",Sociologia.java(144:4-144:57),"output.append(String.format(""%d %d\n"",grupos,solos));"
105,VARIABLEDECLARATION,"npessoas",Sociologia.java(114:8-114:30),"npessoas=ler.nextInt()"
106,VARIABLEDECLARATION,"amigos",Sociologia.java(115:10-115:38),"amigos = new Grafo(npessoas)"
107,VARIABLEDECLARATION,"amigos1",Sociologia.java(116:10-116:39),"amigos1 = new Grafo(npessoas)"
108,VARIABLEDECLARATION,"grupos",Sociologia.java(131:8-131:16),"grupos=0"
109,VARIABLEDECLARATION,"solos",Sociologia.java(132:8-132:15),"solos=0"
110,NEWEXPRESSION,"",Sociologia.java(116:20-116:39),"new Grafo(npessoas)"
111,CONSTRUCTEXPRESSION,"",Sociologia.java(116:20-116:39),"new Grafo(npessoas)"
112,CONSTRUCTORDECLARATION,"Grafo",main.java(180:2-187:3),"public Grafo(int n) {
		nvs = n;
		narcos = 0;
		verts = new No[n + 1];
		for (int i = 0; i <= n; i++)
			verts[i] = new No();
		// para vertices numerados de 1 a n (posicao 0 nao vai ser usada)
	}"
113,DECLAREDREFERENCEEXPRESSION,"npessoas",Sociologia.java(116:30-116:38),"npessoas"
114,PARAMVARIABLEDECLARATION,"n",main.java(180:15-180:20),"int n"
115,LITERAL,"",Sociologia.java(132:14-132:15),"0"
116,DECLAREDREFERENCEEXPRESSION,"append",Sociologia.java(130:11-130:17),"append"
117,LITERAL,"",Sociologia.java(131:15-131:16),"0"
118,STATICCALLEXPRESSION,"format",Sociologia.java(130:18-130:51),"String.format(""Caso #%d\n"",lim+1)"
119,BINARYOPERATOR,"+",Sociologia.java(130:45-130:50),"lim+1"
120,DECLAREDREFERENCEEXPRESSION,"lim",Sociologia.java(130:45-130:48),"lim"
121,LITERAL,"",Sociologia.java(130:49-130:50),"1"
122,LITERAL,"",Sociologia.java(130:32-130:44),"""Caso #%d\n"""
123,DECLAREDREFERENCEEXPRESSION,"output",Sociologia.java(130:4-130:10),"output"
124,DECLAREDREFERENCEEXPRESSION,"append",Sociologia.java(144:11-144:17),"append"
125,STATICCALLEXPRESSION,"format",Sociologia.java(144:18-144:55),"String.format(""%d %d\n"",grupos,solos)"
126,DECLAREDREFERENCEEXPRESSION,"output",Sociologia.java(144:4-144:10),"output"
127,LITERAL,"",Sociologia.java(144:32-144:41),"""%d %d\n"""
128,DECLAREDREFERENCEEXPRESSION,"solos",Sociologia.java(144:49-144:54),"solos"
129,DECLAREDREFERENCEEXPRESSION,"grupos",Sociologia.java(144:42-144:48),"grupos"
130,MEMBERCALLEXPRESSION,"nextInt",Sociologia.java(114:17-114:30),"ler.nextInt()"
131,DECLAREDREFERENCEEXPRESSION,"nextInt",Sociologia.java(114:21-114:28),"nextInt"
132,LITERAL,"",Sociologia.java(117:14-117:15),"0"
133,DECLAREDREFERENCEEXPRESSION,"Sociologia",Sociologia.java(134:11-134:17),"Sociologia"
134,DECLAREDREFERENCEEXPRESSION,"npessoas",Sociologia.java(115:29-115:37),"npessoas"
135,IFSTATEMENT,"",Sociologia.java(127:5-128:20),"if(amigos.visitado[i]==0)
					DFS(amigos,i);"
136,DECLARATIONSTATEMENT,"",Sociologia.java(126:8-126:16),"int i =0"
137,BINARYOPERATOR,"<",Sociologia.java(126:17-126:31),"i<amigos.sizeV"
138,UNARYOPERATOR,"++",Sociologia.java(126:32-126:35),"i++"
139,VARIABLEDECLARATION,"i",Sociologia.java(126:12-126:16),"i =0"
140,DECLAREDREFERENCEEXPRESSION,"amigos",Sociologia.java(127:8-127:14),"amigos"
141,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(126:32-126:33),"i"
142,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(126:17-126:18),"i"
143,CALLEXPRESSION,"DFS",Sociologia.java(128:6-128:20),"DFS(amigos,i);"
144,MEMBEREXPRESSION,"sizeV",Sociologia.java(126:19-126:31),"amigos.sizeV"
145,DECLAREDREFERENCEEXPRESSION,"amigos",Sociologia.java(126:19-126:25),"amigos"
146,BINARYOPERATOR,"==",Sociologia.java(127:8-127:29),"amigos.visitado[i]==0"
147,DECLAREDREFERENCEEXPRESSION,"amigos",Sociologia.java(128:10-128:16),"amigos"
148,METHODDECLARATION,"DFS",,""
149,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(128:17-128:18),"i"
150,PARAMVARIABLEDECLARATION,"int1",,""
151,PARAMVARIABLEDECLARATION,"grafo0",,""
152,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(127:8-127:26),"amigos.visitado[i]"
153,LITERAL,"",Sociologia.java(127:28-127:29),"0"
154,MEMBEREXPRESSION,"visitado",Sociologia.java(127:8-127:23),"amigos.visitado"
155,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(127:24-127:25),"i"
156,LITERAL,"",Sociologia.java(126:15-126:16),"0"
157,UNARYOPERATOR,"!",Sociologia.java(134:10-134:27),"!fexado.isEmpty()"
158,COMPOUNDSTATEMENT,"",Sociologia.java(134:28-143:5),"{ // n.2k + 4n
				int aux = fexado.pop();
				if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}
			}"
159,DECLAREDREFERENCEEXPRESSION,"Sociologia",Sociologia.java(135:15-135:21),"Sociologia"
160,DECLARATIONSTATEMENT,"",Sociologia.java(135:5-135:28),"int aux = fexado.pop();"
161,IFSTATEMENT,"",Sociologia.java(136:5-142:6),"if(amigos1.visitado[aux]==0){
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}"
162,VARIABLEDECLARATION,"aux",Sociologia.java(135:9-135:27),"aux = fexado.pop()"
163,COMPOUNDSTATEMENT,"",Sociologia.java(136:33-142:6),"{
					int count = DFS1(amigos1,aux);
					if(count >=4)
						grupos++;
					else
						solos+=count;
				}"
164,BINARYOPERATOR,"==",Sociologia.java(136:8-136:32),"amigos1.visitado[aux]==0"
165,DECLAREDREFERENCEEXPRESSION,"amigos1",Sociologia.java(137:23-137:30),"amigos1"
166,DECLARATIONSTATEMENT,"",Sociologia.java(137:6-137:36),"int count = DFS1(amigos1,aux);"
167,IFSTATEMENT,"",Sociologia.java(138:6-141:20),"if(count >=4)
						grupos++;
					else
						solos+=count;"
168,VARIABLEDECLARATION,"count",Sociologia.java(137:10-137:35),"count = DFS1(amigos1,aux)"
169,UNARYOPERATOR,"++",Sociologia.java(139:7-139:16),"grupos++;"
170,BINARYOPERATOR,"+=",Sociologia.java(141:7-141:20),"solos+=count;"
171,BINARYOPERATOR,">=",Sociologia.java(138:9-138:18),"count >=4"
172,DECLAREDREFERENCEEXPRESSION,"grupos",Sociologia.java(139:7-139:13),"grupos"
173,DECLAREDREFERENCEEXPRESSION,"solos",Sociologia.java(141:7-141:12),"solos"
174,DECLAREDREFERENCEEXPRESSION,"count",Sociologia.java(141:14-141:19),"count"
175,DECLAREDREFERENCEEXPRESSION,"count",Sociologia.java(138:9-138:14),"count"
176,LITERAL,"",Sociologia.java(138:17-138:18),"4"
177,CALLEXPRESSION,"DFS1",Sociologia.java(137:18-137:35),"DFS1(amigos1,aux)"
178,DECLAREDREFERENCEEXPRESSION,"aux",Sociologia.java(137:31-137:34),"aux"
179,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(136:8-136:29),"amigos1.visitado[aux]"
180,LITERAL,"",Sociologia.java(136:31-136:32),"0"
181,MEMBEREXPRESSION,"visitado",Sociologia.java(136:8-136:24),"amigos1.visitado"
182,DECLAREDREFERENCEEXPRESSION,"aux",Sociologia.java(136:25-136:28),"aux"
183,DECLAREDREFERENCEEXPRESSION,"amigos1",Sociologia.java(136:8-136:15),"amigos1"
184,MEMBERCALLEXPRESSION,"pop",Sociologia.java(135:15-135:27),"fexado.pop()"
185,DECLAREDREFERENCEEXPRESSION,"pop",Sociologia.java(135:22-135:25),"pop"
186,MEMBEREXPRESSION,"fexado",Sociologia.java(135:15-135:21),"fexado"
187,MEMBERCALLEXPRESSION,"isEmpty",Sociologia.java(134:11-134:27),"fexado.isEmpty()"
188,DECLAREDREFERENCEEXPRESSION,"isEmpty",Sociologia.java(134:18-134:25),"isEmpty"
189,MEMBEREXPRESSION,"fexado",Sociologia.java(134:11-134:17),"fexado"
190,NEWEXPRESSION,"",Sociologia.java(115:19-115:38),"new Grafo(npessoas)"
191,CONSTRUCTEXPRESSION,"",Sociologia.java(115:19-115:38),"new Grafo(npessoas)"
192,COMPOUNDSTATEMENT,"",Sociologia.java(117:31-125:5),"{ //n
				int amigo= ler.nextInt();
				int namigos=ler.nextInt();
				for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}
			}"
193,DECLARATIONSTATEMENT,"",Sociologia.java(117:8-117:15),"int i=0"
194,BINARYOPERATOR,"<",Sociologia.java(117:16-117:26),"i<npessoas"
195,UNARYOPERATOR,"++",Sociologia.java(117:27-117:30),"i++"
196,VARIABLEDECLARATION,"i",Sociologia.java(117:12-117:15),"i=0"
197,DECLAREDREFERENCEEXPRESSION,"ler",Sociologia.java(118:16-118:19),"ler"
198,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(117:16-117:17),"i"
199,DECLAREDREFERENCEEXPRESSION,"npessoas",Sociologia.java(117:18-117:26),"npessoas"
200,DECLARATIONSTATEMENT,"",Sociologia.java(118:5-118:30),"int amigo= ler.nextInt();"
201,DECLARATIONSTATEMENT,"",Sociologia.java(119:5-119:31),"int namigos=ler.nextInt();"
202,FORSTATEMENT,"",Sociologia.java(120:5-124:6),"for(int x=0;x<namigos;x++){ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}"
203,VARIABLEDECLARATION,"amigo",Sociologia.java(118:9-118:29),"amigo= ler.nextInt()"
204,VARIABLEDECLARATION,"namigos",Sociologia.java(119:9-119:30),"namigos=ler.nextInt()"
205,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(117:27-117:28),"i"
206,MEMBERCALLEXPRESSION,"nextInt",Sociologia.java(118:16-118:29),"ler.nextInt()"
207,DECLAREDREFERENCEEXPRESSION,"nextInt",Sociologia.java(118:20-118:27),"nextInt"
208,MEMBERCALLEXPRESSION,"nextInt",Sociologia.java(119:17-119:30),"ler.nextInt()"
209,DECLAREDREFERENCEEXPRESSION,"nextInt",Sociologia.java(119:21-119:28),"nextInt"
210,DECLAREDREFERENCEEXPRESSION,"ler",Sociologia.java(119:17-119:20),"ler"
211,COMPOUNDSTATEMENT,"",Sociologia.java(120:31-124:6),"{ //2k
					int amig = ler.nextInt();
					amigos.AddArco(amigo-1,0,amig-1);
					amigos1.AddArco(amig-1, 0, amigo-1);
				}"
212,DECLARATIONSTATEMENT,"",Sociologia.java(120:9-120:16),"int x=0"
213,BINARYOPERATOR,"<",Sociologia.java(120:17-120:26),"x<namigos"
214,UNARYOPERATOR,"++",Sociologia.java(120:27-120:30),"x++"
215,VARIABLEDECLARATION,"x",Sociologia.java(120:13-120:16),"x=0"
216,DECLAREDREFERENCEEXPRESSION,"ler",Sociologia.java(121:17-121:20),"ler"
217,DECLAREDREFERENCEEXPRESSION,"x",Sociologia.java(120:17-120:18),"x"
218,DECLAREDREFERENCEEXPRESSION,"namigos",Sociologia.java(120:19-120:26),"namigos"
219,DECLAREDREFERENCEEXPRESSION,"x",Sociologia.java(120:27-120:28),"x"
220,LITERAL,"",Sociologia.java(120:15-120:16),"0"
221,DECLARATIONSTATEMENT,"",Sociologia.java(121:6-121:31),"int amig = ler.nextInt();"
222,MEMBERCALLEXPRESSION,"AddArco",Sociologia.java(122:6-122:39),"amigos.AddArco(amigo-1,0,amig-1);"
223,MEMBERCALLEXPRESSION,"AddArco",Sociologia.java(123:6-123:42),"amigos1.AddArco(amig-1, 0, amigo-1);"
224,VARIABLEDECLARATION,"amig",Sociologia.java(121:10-121:30),"amig = ler.nextInt()"
225,DECLAREDREFERENCEEXPRESSION,"amigos",Sociologia.java(122:6-122:12),"amigos"
226,DECLAREDREFERENCEEXPRESSION,"AddArco",Sociologia.java(122:13-122:20),"AddArco"
227,METHODDECLARATION,"AddArco",,""
228,DECLAREDREFERENCEEXPRESSION,"amigos1",Sociologia.java(123:6-123:13),"amigos1"
229,BINARYOPERATOR,"-",Sociologia.java(122:31-122:37),"amig-1"
230,BINARYOPERATOR,"-",Sociologia.java(122:21-122:28),"amigo-1"
231,DECLAREDREFERENCEEXPRESSION,"amigo",Sociologia.java(122:21-122:26),"amigo"
232,LITERAL,"",Sociologia.java(122:27-122:28),"1"
233,PARAMVARIABLEDECLARATION,"unknown0",,""
234,LITERAL,"",Sociologia.java(122:29-122:30),"0"
235,DECLAREDREFERENCEEXPRESSION,"amig",Sociologia.java(122:31-122:35),"amig"
236,LITERAL,"",Sociologia.java(122:36-122:37),"1"
237,PARAMVARIABLEDECLARATION,"unknown2",,""
238,PARAMVARIABLEDECLARATION,"int1",,""
239,DECLAREDREFERENCEEXPRESSION,"AddArco",Sociologia.java(123:14-123:21),"AddArco"
240,BINARYOPERATOR,"-",Sociologia.java(123:33-123:40),"amigo-1"
241,DECLAREDREFERENCEEXPRESSION,"amigo",Sociologia.java(123:33-123:38),"amigo"
242,LITERAL,"",Sociologia.java(123:39-123:40),"1"
243,LITERAL,"",Sociologia.java(123:30-123:31),"0"
244,BINARYOPERATOR,"-",Sociologia.java(123:22-123:28),"amig-1"
245,DECLAREDREFERENCEEXPRESSION,"amig",Sociologia.java(123:22-123:26),"amig"
246,LITERAL,"",Sociologia.java(123:27-123:28),"1"
247,MEMBERCALLEXPRESSION,"nextInt",Sociologia.java(121:17-121:30),"ler.nextInt()"
248,DECLAREDREFERENCEEXPRESSION,"nextInt",Sociologia.java(121:21-121:28),"nextInt"
249,MEMBERCALLEXPRESSION,"nextInt",Sociologia.java(111:15-111:28),"ler.nextInt()"
250,DECLAREDREFERENCEEXPRESSION,"nextInt",Sociologia.java(111:19-111:26),"nextInt"
251,NEWEXPRESSION,"",Sociologia.java(110:24-110:43),"new StringBuilder()"
252,NEWEXPRESSION,"",Sociologia.java(109:17-109:39),"new Scanner(System.in)"
253,CONSTRUCTEXPRESSION,"",Sociologia.java(109:17-109:39),"new Scanner(System.in)"
254,MEMBEREXPRESSION,"in",Sociologia.java(109:29-109:38),"System.in"
255,DECLAREDREFERENCEEXPRESSION,"close",Sociologia.java(148:7-148:12),"close"
256,VARIABLEDECLARATION,"this",,""
257,COMPOUNDSTATEMENT,"",Sociologia.java(82:35-91:3),"{ 
		xpto.visitado[v]=1;
		ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();
		while(iterador.hasNext()){   //n
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				DFS(xpto,aux);
		}
		fexado.push(v);
	}"
258,PARAMVARIABLEDECLARATION,"xpto",Sociologia.java(82:18-82:28),"Grafo xpto"
259,PARAMVARIABLEDECLARATION,"v",Sociologia.java(82:29-82:34),"int v"
260,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(83:3-83:7),"xpto"
261,RETURNSTATEMENT,"",,""
262,BINARYOPERATOR,"=",Sociologia.java(83:3-83:22),"xpto.visitado[v]=1;"
263,DECLARATIONSTATEMENT,"",Sociologia.java(84:3-84:71),"ListIterator<Arco> iterador = xpto.vertex[v].arestas.listIterator();"
264,WHILESTATEMENT,"",Sociologia.java(85:3-89:4),"while(iterador.hasNext()){   //n
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				DFS(xpto,aux);
		}"
265,MEMBERCALLEXPRESSION,"push",Sociologia.java(90:3-90:18),"fexado.push(v);"
266,VARIABLEDECLARATION,"iterador",Sociologia.java(84:22-84:70),"iterador = xpto.vertex[v].arestas.listIterator()"
267,MEMBERCALLEXPRESSION,"listIterator",Sociologia.java(84:33-84:70),"xpto.vertex[v].arestas.listIterator()"
268,DECLAREDREFERENCEEXPRESSION,"listIterator",Sociologia.java(84:56-84:68),"listIterator"
269,MEMBEREXPRESSION,"arestas",Sociologia.java(84:33-84:55),"xpto.vertex[v].arestas"
270,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(84:33-84:47),"xpto.vertex[v]"
271,MEMBEREXPRESSION,"vertex",Sociologia.java(84:33-84:44),"xpto.vertex"
272,DECLAREDREFERENCEEXPRESSION,"v",Sociologia.java(84:45-84:46),"v"
273,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(84:33-84:37),"xpto"
274,MEMBERCALLEXPRESSION,"hasNext",Sociologia.java(85:9-85:27),"iterador.hasNext()"
275,COMPOUNDSTATEMENT,"",Sociologia.java(85:28-89:4),"{   //n
			int aux = iterador.next().aponta;
			if(xpto.visitado[aux]==0)
				DFS(xpto,aux);
		}"
276,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(86:14-86:22),"iterador"
277,DECLAREDREFERENCEEXPRESSION,"Sociologia",Sociologia.java(90:3-90:9),"Sociologia"
278,DECLARATIONSTATEMENT,"",Sociologia.java(86:4-86:37),"int aux = iterador.next().aponta;"
279,IFSTATEMENT,"",Sociologia.java(87:4-88:19),"if(xpto.visitado[aux]==0)
				DFS(xpto,aux);"
280,VARIABLEDECLARATION,"aux",Sociologia.java(86:8-86:36),"aux = iterador.next().aponta"
281,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(85:9-85:17),"iterador"
282,CALLEXPRESSION,"DFS",Sociologia.java(88:5-88:19),"DFS(xpto,aux);"
283,BINARYOPERATOR,"==",Sociologia.java(87:7-87:28),"xpto.visitado[aux]==0"
284,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(88:9-88:13),"xpto"
285,DECLAREDREFERENCEEXPRESSION,"aux",Sociologia.java(88:14-88:17),"aux"
286,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(87:7-87:25),"xpto.visitado[aux]"
287,LITERAL,"",Sociologia.java(87:27-87:28),"0"
288,MEMBEREXPRESSION,"visitado",Sociologia.java(87:7-87:20),"xpto.visitado"
289,DECLAREDREFERENCEEXPRESSION,"aux",Sociologia.java(87:21-87:24),"aux"
290,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(87:7-87:11),"xpto"
291,MEMBEREXPRESSION,"aponta",Sociologia.java(86:14-86:36),"iterador.next().aponta"
292,MEMBERCALLEXPRESSION,"next",Sociologia.java(86:14-86:29),"iterador.next()"
293,DECLAREDREFERENCEEXPRESSION,"next",Sociologia.java(86:23-86:27),"next"
294,DECLAREDREFERENCEEXPRESSION,"hasNext",Sociologia.java(85:18-85:25),"hasNext"
295,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(83:3-83:19),"xpto.visitado[v]"
296,LITERAL,"",Sociologia.java(83:20-83:21),"1"
297,MEMBEREXPRESSION,"visitado",Sociologia.java(83:3-83:16),"xpto.visitado"
298,DECLAREDREFERENCEEXPRESSION,"v",Sociologia.java(83:17-83:18),"v"
299,DECLAREDREFERENCEEXPRESSION,"push",Sociologia.java(90:10-90:14),"push"
300,DECLAREDREFERENCEEXPRESSION,"v",Sociologia.java(90:15-90:16),"v"
301,MEMBEREXPRESSION,"fexado",Sociologia.java(90:3-90:9),"fexado"
302,FIELDDECLARATION,"this",,""
303,FIELDDECLARATION,"sizeV",Sociologia.java(12:2-12:12),"sizeV"
304,FIELDDECLARATION,"sizeA",Sociologia.java(13:2-13:12),"sizeA"
305,FIELDDECLARATION,"vertex",Sociologia.java(14:2-14:18),"vertex"
306,FIELDDECLARATION,"visitado",Sociologia.java(15:2-15:17),"visitado"
307,METHODDECLARATION,"AddArco",Sociologia.java(35:2-38:3),"public void AddArco(int were,int p,int a){ //Adiciona arco
		vertex[were].arestas.add(new Arco(p,a));
		sizeA++;
	}"
308,METHODDECLARATION,"Vertices",Sociologia.java(40:2-42:3),"public int Vertices(){
		return sizeV;
	}"
309,METHODDECLARATION,"Arcos",Sociologia.java(44:2-46:3),"public int Arcos(){
		return sizeA;
	}"
310,METHODDECLARATION,"existeA",Sociologia.java(48:2-54:3),"boolean existeA(int a, int b){
		ListIterator<Arco> iterador = vertex[a].arestas.listIterator();
		while(iterador.hasNext())
			if(iterador.next().aponta==b)
				return true;
	return false;					
	}"
311,METHODDECLARATION,"existeS",Sociologia.java(56:2-64:3),"String existeS(String xpto){ //VERIFICA A EXISTENCIA DE UM ARCO QUE UNE DUAS LETRAS
		for(int i=0;i<xpto.length()-1;i++){
			int vert = xpto.charAt(i)-'A';
			int aresta=xpto.charAt(i+1)-'A';
		if(!existeA(vert,aresta))
			return ""nï¿½o"";	
		}
		return ""sim"";
	}"
312,METHODDECLARATION,"post",Sociologia.java(66:2-77:3),"int post (int a){
		int count =1;
		visitado[a]=1;
		ListIterator<Arco> iterador = vertex[a].arestas.listIterator();
		while(iterador.hasNext()){
			int temp = iterador.next().aponta;
			if(visitado[temp]==0)
				count += post(temp);
			
		}
		return count;
	}"
313,CONSTRUCTORDECLARATION,"Grafo",Sociologia.java(25:2-33:3),"Grafo(int tamanho){
		sizeV=tamanho;
		vertex = new Vertex[tamanho];
		visitado = new int[tamanho];  //0->por visitar, 1->visitado, 2->fexado
		for(int i =0;i<tamanho;i++){
			vertex[i]=new Vertex();
			visitado[i]=0;
		}
	}"
314,RECORDDECLARATION,"Grafo.Vertex",Sociologia.java(17:1-23:2),"class Vertex{
	LinkedList <Arco> arestas;
	
	Vertex(){
		arestas= new LinkedList<Arco>();
	}
}"
315,FIELDDECLARATION,"this",,""
316,FIELDDECLARATION,"arestas",Sociologia.java(18:2-18:28),"arestas"
317,CONSTRUCTORDECLARATION,"Vertex",Sociologia.java(20:2-22:3),"Vertex(){
		arestas= new LinkedList<Arco>();
	}"
318,COMPOUNDSTATEMENT,"",Sociologia.java(20:10-22:3),"{
		arestas= new LinkedList<Arco>();
	}"
319,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(21:3-21:10),"this"
320,RETURNSTATEMENT,"",,""
321,BINARYOPERATOR,"=",Sociologia.java(21:3-21:35),"arestas= new LinkedList<Arco>();"
322,MEMBEREXPRESSION,"arestas",Sociologia.java(21:3-21:10),"arestas"
323,NEWEXPRESSION,"",Sociologia.java(21:12-21:34),"new LinkedList<Arco>()"
324,CONSTRUCTEXPRESSION,"",Sociologia.java(21:12-21:34),"new LinkedList<Arco>()"
325,VARIABLEDECLARATION,"this",,""
326,COMPOUNDSTATEMENT,"",Sociologia.java(56:29-64:3),"{ //VERIFICA A EXISTENCIA DE UM ARCO QUE UNE DUAS LETRAS
		for(int i=0;i<xpto.length()-1;i++){
			int vert = xpto.charAt(i)-'A';
			int aresta=xpto.charAt(i+1)-'A';
		if(!existeA(vert,aresta))
			return ""nï¿½o"";	
		}
		return ""sim"";
	}"
327,PARAMVARIABLEDECLARATION,"xpto",Sociologia.java(56:17-56:28),"String xpto"
328,LITERAL,"",Sociologia.java(57:13-57:14),"0"
329,RETURNSTATEMENT,"",Sociologia.java(63:3-63:16),"return ""sim"";"
330,FORSTATEMENT,"",Sociologia.java(57:3-62:4),"for(int i=0;i<xpto.length()-1;i++){
			int vert = xpto.charAt(i)-'A';
			int aresta=xpto.charAt(i+1)-'A';
		if(!existeA(vert,aresta))
			return ""nï¿½o"";	
		}"
331,LITERAL,"",Sociologia.java(63:10-63:15),"""sim"""
332,COMPOUNDSTATEMENT,"",Sociologia.java(57:37-62:4),"{
			int vert = xpto.charAt(i)-'A';
			int aresta=xpto.charAt(i+1)-'A';
		if(!existeA(vert,aresta))
			return ""nï¿½o"";	
		}"
333,DECLARATIONSTATEMENT,"",Sociologia.java(57:7-57:14),"int i=0"
334,BINARYOPERATOR,"<",Sociologia.java(57:15-57:32),"i<xpto.length()-1"
335,UNARYOPERATOR,"++",Sociologia.java(57:33-57:36),"i++"
336,VARIABLEDECLARATION,"i",Sociologia.java(57:11-57:14),"i=0"
337,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(58:15-58:19),"xpto"
338,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(57:15-57:16),"i"
339,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(57:33-57:34),"i"
340,DECLARATIONSTATEMENT,"",Sociologia.java(58:4-58:34),"int vert = xpto.charAt(i)-'A';"
341,DECLARATIONSTATEMENT,"",Sociologia.java(59:4-59:36),"int aresta=xpto.charAt(i+1)-'A';"
342,IFSTATEMENT,"",Sociologia.java(60:3-61:17),"if(!existeA(vert,aresta))
			return ""nï¿½o"";"
343,VARIABLEDECLARATION,"vert",Sociologia.java(58:8-58:33),"vert = xpto.charAt(i)-'A'"
344,VARIABLEDECLARATION,"aresta",Sociologia.java(59:8-59:35),"aresta=xpto.charAt(i+1)-'A'"
345,BINARYOPERATOR,"-",Sociologia.java(59:15-59:35),"xpto.charAt(i+1)-'A'"
346,MEMBERCALLEXPRESSION,"charAt",Sociologia.java(59:15-59:31),"xpto.charAt(i+1)"
347,LITERAL,"",Sociologia.java(59:32-59:35),"'A'"
348,DECLAREDREFERENCEEXPRESSION,"charAt",Sociologia.java(59:20-59:26),"charAt"
349,BINARYOPERATOR,"+",Sociologia.java(59:27-59:30),"i+1"
350,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(59:15-59:19),"xpto"
351,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(59:27-59:28),"i"
352,LITERAL,"",Sociologia.java(59:29-59:30),"1"
353,BINARYOPERATOR,"-",Sociologia.java(58:15-58:33),"xpto.charAt(i)-'A'"
354,MEMBERCALLEXPRESSION,"charAt",Sociologia.java(58:15-58:29),"xpto.charAt(i)"
355,LITERAL,"",Sociologia.java(58:30-58:33),"'A'"
356,DECLAREDREFERENCEEXPRESSION,"charAt",Sociologia.java(58:20-58:26),"charAt"
357,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(58:27-58:28),"i"
358,DECLAREDREFERENCEEXPRESSION,"vert",Sociologia.java(60:15-60:19),"vert"
359,UNARYOPERATOR,"!",Sociologia.java(60:6-60:27),"!existeA(vert,aresta)"
360,RETURNSTATEMENT,"",Sociologia.java(61:4-61:17),"return ""nï¿½o"";"
361,LITERAL,"",Sociologia.java(61:11-61:16),"""nï¿½o"""
362,CALLEXPRESSION,"existeA",Sociologia.java(60:7-60:27),"existeA(vert,aresta)"
363,METHODDECLARATION,"existeA",,""
364,DECLAREDREFERENCEEXPRESSION,"aresta",Sociologia.java(60:20-60:26),"aresta"
365,PARAMVARIABLEDECLARATION,"int1",,""
366,PARAMVARIABLEDECLARATION,"int0",,""
367,BINARYOPERATOR,"-",Sociologia.java(57:17-57:32),"xpto.length()-1"
368,DECLAREDREFERENCEEXPRESSION,"xpto",Sociologia.java(57:17-57:21),"xpto"
369,MEMBERCALLEXPRESSION,"length",Sociologia.java(57:17-57:30),"xpto.length()"
370,LITERAL,"",Sociologia.java(57:31-57:32),"1"
371,DECLAREDREFERENCEEXPRESSION,"length",Sociologia.java(57:22-57:28),"length"
372,VARIABLEDECLARATION,"this",,""
373,COMPOUNDSTATEMENT,"",Sociologia.java(66:18-77:3),"{
		int count =1;
		visitado[a]=1;
		ListIterator<Arco> iterador = vertex[a].arestas.listIterator();
		while(iterador.hasNext()){
			int temp = iterador.next().aponta;
			if(visitado[temp]==0)
				count += post(temp);
			
		}
		return count;
	}"
374,PARAMVARIABLEDECLARATION,"a",Sociologia.java(66:12-66:17),"int a"
375,LITERAL,"",Sociologia.java(67:14-67:15),"1"
376,RETURNSTATEMENT,"",Sociologia.java(76:3-76:16),"return count;"
377,DECLARATIONSTATEMENT,"",Sociologia.java(67:3-67:16),"int count =1;"
378,BINARYOPERATOR,"=",Sociologia.java(68:3-68:17),"visitado[a]=1;"
379,DECLARATIONSTATEMENT,"",Sociologia.java(69:3-69:66),"ListIterator<Arco> iterador = vertex[a].arestas.listIterator();"
380,WHILESTATEMENT,"",Sociologia.java(70:3-75:4),"while(iterador.hasNext()){
			int temp = iterador.next().aponta;
			if(visitado[temp]==0)
				count += post(temp);
			
		}"
381,VARIABLEDECLARATION,"count",Sociologia.java(67:7-67:15),"count =1"
382,VARIABLEDECLARATION,"iterador",Sociologia.java(69:22-69:65),"iterador = vertex[a].arestas.listIterator()"
383,DECLAREDREFERENCEEXPRESSION,"count",Sociologia.java(76:10-76:15),"count"
384,MEMBERCALLEXPRESSION,"listIterator",Sociologia.java(69:33-69:65),"vertex[a].arestas.listIterator()"
385,DECLAREDREFERENCEEXPRESSION,"listIterator",Sociologia.java(69:51-69:63),"listIterator"
386,MEMBEREXPRESSION,"arestas",Sociologia.java(69:33-69:50),"vertex[a].arestas"
387,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(69:33-69:42),"vertex[a]"
388,MEMBEREXPRESSION,"vertex",Sociologia.java(69:33-69:39),"vertex"
389,DECLAREDREFERENCEEXPRESSION,"a",Sociologia.java(69:40-69:41),"a"
390,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(69:33-69:39),"this"
391,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(68:3-68:11),"this"
392,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(70:9-70:17),"iterador"
393,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(68:3-68:14),"visitado[a]"
394,LITERAL,"",Sociologia.java(68:15-68:16),"1"
395,MEMBEREXPRESSION,"visitado",Sociologia.java(68:3-68:11),"visitado"
396,DECLAREDREFERENCEEXPRESSION,"a",Sociologia.java(68:12-68:13),"a"
397,MEMBERCALLEXPRESSION,"hasNext",Sociologia.java(70:9-70:27),"iterador.hasNext()"
398,COMPOUNDSTATEMENT,"",Sociologia.java(70:28-75:4),"{
			int temp = iterador.next().aponta;
			if(visitado[temp]==0)
				count += post(temp);
			
		}"
399,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(71:15-71:23),"iterador"
400,DECLARATIONSTATEMENT,"",Sociologia.java(71:4-71:38),"int temp = iterador.next().aponta;"
401,IFSTATEMENT,"",Sociologia.java(72:4-73:25),"if(visitado[temp]==0)
				count += post(temp);"
402,VARIABLEDECLARATION,"temp",Sociologia.java(71:8-71:37),"temp = iterador.next().aponta"
403,BINARYOPERATOR,"+=",Sociologia.java(73:5-73:25),"count += post(temp);"
404,MEMBEREXPRESSION,"aponta",Sociologia.java(71:15-71:37),"iterador.next().aponta"
405,MEMBERCALLEXPRESSION,"next",Sociologia.java(71:15-71:30),"iterador.next()"
406,DECLAREDREFERENCEEXPRESSION,"next",Sociologia.java(71:24-71:28),"next"
407,BINARYOPERATOR,"==",Sociologia.java(72:7-72:24),"visitado[temp]==0"
408,DECLAREDREFERENCEEXPRESSION,"count",Sociologia.java(73:5-73:10),"count"
409,CALLEXPRESSION,"post",Sociologia.java(73:14-73:24),"post(temp)"
410,DECLAREDREFERENCEEXPRESSION,"temp",Sociologia.java(73:19-73:23),"temp"
411,METHODDECLARATION,"post",,""
412,PARAMVARIABLEDECLARATION,"int0",,""
413,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(72:7-72:21),"visitado[temp]"
414,LITERAL,"",Sociologia.java(72:23-72:24),"0"
415,MEMBEREXPRESSION,"visitado",Sociologia.java(72:7-72:15),"visitado"
416,DECLAREDREFERENCEEXPRESSION,"temp",Sociologia.java(72:16-72:20),"temp"
417,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(72:7-72:15),"this"
418,DECLAREDREFERENCEEXPRESSION,"hasNext",Sociologia.java(70:18-70:25),"hasNext"
419,COMPOUNDSTATEMENT,"",Sociologia.java(25:20-33:3),"{
		sizeV=tamanho;
		vertex = new Vertex[tamanho];
		visitado = new int[tamanho];  //0->por visitar, 1->visitado, 2->fexado
		for(int i =0;i<tamanho;i++){
			vertex[i]=new Vertex();
			visitado[i]=0;
		}
	}"
420,PARAMVARIABLEDECLARATION,"tamanho",Sociologia.java(25:8-25:19),"int tamanho"
421,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(26:3-26:8),"this"
422,RETURNSTATEMENT,"",,""
423,BINARYOPERATOR,"=",Sociologia.java(26:3-26:17),"sizeV=tamanho;"
424,BINARYOPERATOR,"=",Sociologia.java(27:3-27:32),"vertex = new Vertex[tamanho];"
425,BINARYOPERATOR,"=",Sociologia.java(28:3-28:31),"visitado = new int[tamanho];"
426,FORSTATEMENT,"",Sociologia.java(29:3-32:4),"for(int i =0;i<tamanho;i++){
			vertex[i]=new Vertex();
			visitado[i]=0;
		}"
427,MEMBEREXPRESSION,"vertex",Sociologia.java(27:3-27:9),"vertex"
428,ARRAYCREATIONEXPRESSION,"",Sociologia.java(27:12-27:31),"new Vertex[tamanho]"
429,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(28:3-28:11),"this"
430,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(27:3-27:9),"this"
431,DECLAREDREFERENCEEXPRESSION,"tamanho",Sociologia.java(27:23-27:30),"tamanho"
432,COMPOUNDSTATEMENT,"",Sociologia.java(29:30-32:4),"{
			vertex[i]=new Vertex();
			visitado[i]=0;
		}"
433,DECLARATIONSTATEMENT,"",Sociologia.java(29:7-29:15),"int i =0"
434,BINARYOPERATOR,"<",Sociologia.java(29:16-29:25),"i<tamanho"
435,UNARYOPERATOR,"++",Sociologia.java(29:26-29:29),"i++"
436,VARIABLEDECLARATION,"i",Sociologia.java(29:11-29:15),"i =0"
437,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(30:4-30:10),"this"
438,BINARYOPERATOR,"=",Sociologia.java(30:4-30:27),"vertex[i]=new Vertex();"
439,BINARYOPERATOR,"=",Sociologia.java(31:4-31:18),"visitado[i]=0;"
440,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(29:26-29:27),"i"
441,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(31:4-31:15),"visitado[i]"
442,LITERAL,"",Sociologia.java(31:16-31:17),"0"
443,MEMBEREXPRESSION,"visitado",Sociologia.java(31:4-31:12),"visitado"
444,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(31:13-31:14),"i"
445,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(31:4-31:12),"this"
446,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(30:4-30:13),"vertex[i]"
447,NEWEXPRESSION,"",Sociologia.java(30:14-30:26),"new Vertex()"
448,MEMBEREXPRESSION,"vertex",Sociologia.java(30:4-30:10),"vertex"
449,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(30:11-30:12),"i"
450,CONSTRUCTEXPRESSION,"",Sociologia.java(30:14-30:26),"new Vertex()"
451,CONSTRUCTORDECLARATION,"Vertex",emcomenda.java(100:3-102:4),"Vertex(){
			arestas= new LinkedList<Arco>();
		}"
452,DECLAREDREFERENCEEXPRESSION,"i",Sociologia.java(29:16-29:17),"i"
453,DECLAREDREFERENCEEXPRESSION,"tamanho",Sociologia.java(29:18-29:25),"tamanho"
454,LITERAL,"",Sociologia.java(29:14-29:15),"0"
455,MEMBEREXPRESSION,"visitado",Sociologia.java(28:3-28:11),"visitado"
456,ARRAYCREATIONEXPRESSION,"",Sociologia.java(28:14-28:30),"new int[tamanho]"
457,DECLAREDREFERENCEEXPRESSION,"tamanho",Sociologia.java(28:22-28:29),"tamanho"
458,MEMBEREXPRESSION,"sizeV",Sociologia.java(26:3-26:8),"sizeV"
459,DECLAREDREFERENCEEXPRESSION,"tamanho",Sociologia.java(26:9-26:16),"tamanho"
460,VARIABLEDECLARATION,"this",,""
461,COMPOUNDSTATEMENT,"",Sociologia.java(44:20-46:3),"{
		return sizeA;
	}"
462,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(45:10-45:15),"this"
463,RETURNSTATEMENT,"",Sociologia.java(45:3-45:16),"return sizeA;"
464,MEMBEREXPRESSION,"sizeA",Sociologia.java(45:10-45:15),"sizeA"
465,VARIABLEDECLARATION,"this",,""
466,COMPOUNDSTATEMENT,"",Sociologia.java(48:31-54:3),"{
		ListIterator<Arco> iterador = vertex[a].arestas.listIterator();
		while(iterador.hasNext())
			if(iterador.next().aponta==b)
				return true;
	return false;					
	}"
467,PARAMVARIABLEDECLARATION,"a",Sociologia.java(48:18-48:23),"int a"
468,PARAMVARIABLEDECLARATION,"b",Sociologia.java(48:25-48:30),"int b"
469,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(49:33-49:39),"this"
470,RETURNSTATEMENT,"",Sociologia.java(53:2-53:15),"return false;"
471,DECLARATIONSTATEMENT,"",Sociologia.java(49:3-49:66),"ListIterator<Arco> iterador = vertex[a].arestas.listIterator();"
472,WHILESTATEMENT,"",Sociologia.java(50:3-52:17),"while(iterador.hasNext())
			if(iterador.next().aponta==b)
				return true;"
473,VARIABLEDECLARATION,"iterador",Sociologia.java(49:22-49:65),"iterador = vertex[a].arestas.listIterator()"
474,MEMBERCALLEXPRESSION,"hasNext",Sociologia.java(50:9-50:27),"iterador.hasNext()"
475,IFSTATEMENT,"",Sociologia.java(51:4-52:17),"if(iterador.next().aponta==b)
				return true;"
476,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(51:7-51:15),"iterador"
477,LITERAL,"",Sociologia.java(53:9-53:14),"false"
478,BINARYOPERATOR,"==",Sociologia.java(51:7-51:32),"iterador.next().aponta==b"
479,RETURNSTATEMENT,"",Sociologia.java(52:5-52:17),"return true;"
480,LITERAL,"",Sociologia.java(52:12-52:16),"true"
481,DECLAREDREFERENCEEXPRESSION,"iterador",Sociologia.java(50:9-50:17),"iterador"
482,MEMBEREXPRESSION,"aponta",Sociologia.java(51:7-51:29),"iterador.next().aponta"
483,DECLAREDREFERENCEEXPRESSION,"b",Sociologia.java(51:31-51:32),"b"
484,MEMBERCALLEXPRESSION,"next",Sociologia.java(51:7-51:22),"iterador.next()"
485,DECLAREDREFERENCEEXPRESSION,"next",Sociologia.java(51:16-51:20),"next"
486,DECLAREDREFERENCEEXPRESSION,"hasNext",Sociologia.java(50:18-50:25),"hasNext"
487,MEMBERCALLEXPRESSION,"listIterator",Sociologia.java(49:33-49:65),"vertex[a].arestas.listIterator()"
488,DECLAREDREFERENCEEXPRESSION,"listIterator",Sociologia.java(49:51-49:63),"listIterator"
489,MEMBEREXPRESSION,"arestas",Sociologia.java(49:33-49:50),"vertex[a].arestas"
490,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(49:33-49:42),"vertex[a]"
491,MEMBEREXPRESSION,"vertex",Sociologia.java(49:33-49:39),"vertex"
492,DECLAREDREFERENCEEXPRESSION,"a",Sociologia.java(49:40-49:41),"a"
493,VARIABLEDECLARATION,"this",,""
494,COMPOUNDSTATEMENT,"",Sociologia.java(40:23-42:3),"{
		return sizeV;
	}"
495,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(41:10-41:15),"this"
496,RETURNSTATEMENT,"",Sociologia.java(41:3-41:16),"return sizeV;"
497,MEMBEREXPRESSION,"sizeV",Sociologia.java(41:10-41:15),"sizeV"
498,VARIABLEDECLARATION,"this",,""
499,COMPOUNDSTATEMENT,"",Sociologia.java(35:43-38:3),"{ //Adiciona arco
		vertex[were].arestas.add(new Arco(p,a));
		sizeA++;
	}"
500,PARAMVARIABLEDECLARATION,"were",Sociologia.java(35:22-35:30),"int were"
501,PARAMVARIABLEDECLARATION,"p",Sociologia.java(35:31-35:36),"int p"
502,PARAMVARIABLEDECLARATION,"a",Sociologia.java(35:37-35:42),"int a"
503,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(36:3-36:9),"this"
504,RETURNSTATEMENT,"",,""
505,MEMBERCALLEXPRESSION,"add",Sociologia.java(36:3-36:43),"vertex[were].arestas.add(new Arco(p,a));"
506,UNARYOPERATOR,"++",Sociologia.java(37:3-37:11),"sizeA++;"
507,MEMBEREXPRESSION,"sizeA",Sociologia.java(37:3-37:8),"sizeA"
508,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(37:3-37:8),"this"
509,DECLAREDREFERENCEEXPRESSION,"add",Sociologia.java(36:24-36:27),"add"
510,NEWEXPRESSION,"",Sociologia.java(36:28-36:41),"new Arco(p,a)"
511,MEMBEREXPRESSION,"arestas",Sociologia.java(36:3-36:23),"vertex[were].arestas"
512,ARRAYSUBSCRIPTIONEXPRESSION,"",Sociologia.java(36:3-36:15),"vertex[were]"
513,DECLAREDREFERENCEEXPRESSION,"p",Sociologia.java(36:37-36:38),"p"
514,MEMBEREXPRESSION,"vertex",Sociologia.java(36:3-36:9),"vertex"
515,DECLAREDREFERENCEEXPRESSION,"were",Sociologia.java(36:10-36:14),"were"
516,CONSTRUCTEXPRESSION,"",Sociologia.java(36:28-36:41),"new Arco(p,a)"
517,CONSTRUCTORDECLARATION,"Arco",main.java(153:2-156:3),"Arco(int fim, int v) {
		no_final = fim;
		valor = v;
	}"
518,DECLAREDREFERENCEEXPRESSION,"a",Sociologia.java(36:39-36:40),"a"
519,PARAMVARIABLEDECLARATION,"v",main.java(153:16-153:21),"int v"
520,PARAMVARIABLEDECLARATION,"fim",main.java(153:7-153:14),"int fim"
521,FIELDDECLARATION,"this",,""
522,FIELDDECLARATION,"peso",Sociologia.java(3:2-3:11),"peso"
523,FIELDDECLARATION,"aponta",Sociologia.java(4:2-4:13),"aponta"
524,CONSTRUCTORDECLARATION,"Arco",Sociologia.java(5:2-8:3),"Arco(int p,int a){
		peso=p;
		aponta=a;
	}"
525,COMPOUNDSTATEMENT,"",Sociologia.java(5:19-8:3),"{
		peso=p;
		aponta=a;
	}"
526,PARAMVARIABLEDECLARATION,"p",Sociologia.java(5:7-5:12),"int p"
527,PARAMVARIABLEDECLARATION,"a",Sociologia.java(5:13-5:18),"int a"
528,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(6:3-6:7),"this"
529,RETURNSTATEMENT,"",,""
530,BINARYOPERATOR,"=",Sociologia.java(6:3-6:10),"peso=p;"
531,BINARYOPERATOR,"=",Sociologia.java(7:3-7:12),"aponta=a;"
532,MEMBEREXPRESSION,"peso",Sociologia.java(6:3-6:7),"peso"
533,DECLAREDREFERENCEEXPRESSION,"p",Sociologia.java(6:8-6:9),"p"
534,DECLAREDREFERENCEEXPRESSION,"this",Sociologia.java(7:3-7:9),"this"
535,MEMBEREXPRESSION,"aponta",Sociologia.java(7:3-7:9),"aponta"
536,DECLAREDREFERENCEEXPRESSION,"a",Sociologia.java(7:10-7:11),"a"
