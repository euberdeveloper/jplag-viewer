id,type,token,location,code
1,TRANSLATIONUNITDECLARATION,"/data/00000019/submissions/00856448_Sociologia_070316048/sociologia.java",,""
2,RECORDDECLARATION,"GNode",sociologia.java(3:1-11:2),"class GNode{
    public ArrayList<Integer> filhos= new ArrayList<Integer>();
    public ArrayList<Integer> DFSresult= new ArrayList<Integer>();
    public int cor= 0;
    /*
      0= branco
      1= cinza
    */
}"
3,RECORDDECLARATION,"Search",sociologia.java(13:1-28:2),"class Search{
    public void DFS(GNode inicio, GNode[] listapontos, GNode origem){
	inicio.cor= 1;
	for(int k= 0; k< inicio.filhos.size(); k++){
	    int temp= inicio.filhos.get(k);
	    if(origem.DFSresult.contains(temp)== false){
		origem.DFSresult.add(temp);
	    }
	    GNode filho= new GNode();
	    if(listapontos[temp-1].cor== 0){
		filho= listapontos[temp-1];
	    }
	    DFS(filho, listapontos, origem);
	}
    }
}"
4,RECORDDECLARATION,"sociologia",sociologia.java(30:1-102:2),"class sociologia{
    public static void main(String args[]){
	Scanner stdin= new Scanner(System.in);
	int numerocasos= stdin.nextInt();
	for(int contadorcasos= 0; contadorcasos< numerocasos; contadorcasos++){
	    int numeropessoas= stdin.nextInt();
	    GNode[] listadenos= new GNode[numeropessoas];
	    GNode[] listadenosinvertida= new GNode[numeropessoas];
	    for(int i= 0; i< numeropessoas; i++){
		listadenosinvertida[i]= new GNode();
		listadenosinvertida[i].DFSresult.add(i+1);
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		int posicaono= stdin.nextInt();
		int posicaotemp= posicaono-1;
		listadenos[posicaotemp]= new GNode();
		listadenos[posicaotemp].DFSresult.add(posicaono);
		int numerofilhos= stdin.nextInt();
		if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}
	    }
	   
	    Search DFSnormal= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}
	    }
	    Search DFSinvertida= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}
	    }

	    int contadordegrupos= 0;
	    int numerodenosdefora= 0;
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}
	    }
	    if(contadordegrupos== 0){
		numerodenosdefora= numeropessoas;
	    }
	    System.out.println(""Caso #"" + (contadorcasos+1));
	    System.out.println(contadordegrupos + "" "" + numerodenosdefora);
	}
    }
}"
5,INCLUDEDECLARATION,"java.util",,""
6,FIELDDECLARATION,"this",,""
7,METHODDECLARATION,"main",sociologia.java(31:5-101:6),"public static void main(String args[]){
	Scanner stdin= new Scanner(System.in);
	int numerocasos= stdin.nextInt();
	for(int contadorcasos= 0; contadorcasos< numerocasos; contadorcasos++){
	    int numeropessoas= stdin.nextInt();
	    GNode[] listadenos= new GNode[numeropessoas];
	    GNode[] listadenosinvertida= new GNode[numeropessoas];
	    for(int i= 0; i< numeropessoas; i++){
		listadenosinvertida[i]= new GNode();
		listadenosinvertida[i].DFSresult.add(i+1);
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		int posicaono= stdin.nextInt();
		int posicaotemp= posicaono-1;
		listadenos[posicaotemp]= new GNode();
		listadenos[posicaotemp].DFSresult.add(posicaono);
		int numerofilhos= stdin.nextInt();
		if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}
	    }
	   
	    Search DFSnormal= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}
	    }
	    Search DFSinvertida= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}
	    }

	    int contadordegrupos= 0;
	    int numerodenosdefora= 0;
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}
	    }
	    if(contadordegrupos== 0){
		numerodenosdefora= numeropessoas;
	    }
	    System.out.println(""Caso #"" + (contadorcasos+1));
	    System.out.println(contadordegrupos + "" "" + numerodenosdefora);
	}
    }"
8,CONSTRUCTORDECLARATION,"sociologia",,""
9,VARIABLEDECLARATION,"this",,""
10,COMPOUNDSTATEMENT,"",sociologia.java(31:43-101:6),"{
	Scanner stdin= new Scanner(System.in);
	int numerocasos= stdin.nextInt();
	for(int contadorcasos= 0; contadorcasos< numerocasos; contadorcasos++){
	    int numeropessoas= stdin.nextInt();
	    GNode[] listadenos= new GNode[numeropessoas];
	    GNode[] listadenosinvertida= new GNode[numeropessoas];
	    for(int i= 0; i< numeropessoas; i++){
		listadenosinvertida[i]= new GNode();
		listadenosinvertida[i].DFSresult.add(i+1);
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		int posicaono= stdin.nextInt();
		int posicaotemp= posicaono-1;
		listadenos[posicaotemp]= new GNode();
		listadenos[posicaotemp].DFSresult.add(posicaono);
		int numerofilhos= stdin.nextInt();
		if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}
	    }
	   
	    Search DFSnormal= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}
	    }
	    Search DFSinvertida= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}
	    }

	    int contadordegrupos= 0;
	    int numerodenosdefora= 0;
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}
	    }
	    if(contadordegrupos== 0){
		numerodenosdefora= numeropessoas;
	    }
	    System.out.println(""Caso #"" + (contadorcasos+1));
	    System.out.println(contadordegrupos + "" "" + numerodenosdefora);
	}
    }"
11,PARAMVARIABLEDECLARATION,"args",sociologia.java(31:29-31:42),"String args[]"
12,DECLAREDREFERENCEEXPRESSION,"System",sociologia.java(32:29-32:35),"System"
13,RETURNSTATEMENT,"",,""
14,DECLARATIONSTATEMENT,"",sociologia.java(32:2-32:40),"Scanner stdin= new Scanner(System.in);"
15,DECLARATIONSTATEMENT,"",sociologia.java(33:2-33:35),"int numerocasos= stdin.nextInt();"
16,FORSTATEMENT,"",sociologia.java(34:2-100:3),"for(int contadorcasos= 0; contadorcasos< numerocasos; contadorcasos++){
	    int numeropessoas= stdin.nextInt();
	    GNode[] listadenos= new GNode[numeropessoas];
	    GNode[] listadenosinvertida= new GNode[numeropessoas];
	    for(int i= 0; i< numeropessoas; i++){
		listadenosinvertida[i]= new GNode();
		listadenosinvertida[i].DFSresult.add(i+1);
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		int posicaono= stdin.nextInt();
		int posicaotemp= posicaono-1;
		listadenos[posicaotemp]= new GNode();
		listadenos[posicaotemp].DFSresult.add(posicaono);
		int numerofilhos= stdin.nextInt();
		if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}
	    }
	   
	    Search DFSnormal= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}
	    }
	    Search DFSinvertida= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}
	    }

	    int contadordegrupos= 0;
	    int numerodenosdefora= 0;
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}
	    }
	    if(contadordegrupos== 0){
		numerodenosdefora= numeropessoas;
	    }
	    System.out.println(""Caso #"" + (contadorcasos+1));
	    System.out.println(contadordegrupos + "" "" + numerodenosdefora);
	}"
17,VARIABLEDECLARATION,"stdin",sociologia.java(32:10-32:39),"stdin= new Scanner(System.in)"
18,VARIABLEDECLARATION,"numerocasos",sociologia.java(33:6-33:34),"numerocasos= stdin.nextInt()"
19,NEWEXPRESSION,"",sociologia.java(32:17-32:39),"new Scanner(System.in)"
20,CONSTRUCTEXPRESSION,"",sociologia.java(32:17-32:39),"new Scanner(System.in)"
21,MEMBEREXPRESSION,"in",sociologia.java(32:29-32:38),"System.in"
22,LITERAL,"",sociologia.java(34:25-34:26),"0"
23,COMPOUNDSTATEMENT,"",sociologia.java(34:72-100:3),"{
	    int numeropessoas= stdin.nextInt();
	    GNode[] listadenos= new GNode[numeropessoas];
	    GNode[] listadenosinvertida= new GNode[numeropessoas];
	    for(int i= 0; i< numeropessoas; i++){
		listadenosinvertida[i]= new GNode();
		listadenosinvertida[i].DFSresult.add(i+1);
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		int posicaono= stdin.nextInt();
		int posicaotemp= posicaono-1;
		listadenos[posicaotemp]= new GNode();
		listadenos[posicaotemp].DFSresult.add(posicaono);
		int numerofilhos= stdin.nextInt();
		if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}
	    }
	   
	    Search DFSnormal= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}
	    }
	    Search DFSinvertida= new Search();
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}
	    }

	    int contadordegrupos= 0;
	    int numerodenosdefora= 0;
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}
	    }
	    for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}
	    }
	    if(contadordegrupos== 0){
		numerodenosdefora= numeropessoas;
	    }
	    System.out.println(""Caso #"" + (contadorcasos+1));
	    System.out.println(contadordegrupos + "" "" + numerodenosdefora);
	}"
24,DECLARATIONSTATEMENT,"",sociologia.java(34:6-34:26),"int contadorcasos= 0"
25,BINARYOPERATOR,"<",sociologia.java(34:28-34:54),"contadorcasos< numerocasos"
26,UNARYOPERATOR,"++",sociologia.java(34:56-34:71),"contadorcasos++"
27,VARIABLEDECLARATION,"contadorcasos",sociologia.java(34:10-34:26),"contadorcasos= 0"
28,DECLAREDREFERENCEEXPRESSION,"stdin",sociologia.java(35:25-35:30),"stdin"
29,DECLAREDREFERENCEEXPRESSION,"contadorcasos",sociologia.java(34:28-34:41),"contadorcasos"
30,DECLAREDREFERENCEEXPRESSION,"numerocasos",sociologia.java(34:43-34:54),"numerocasos"
31,DECLARATIONSTATEMENT,"",sociologia.java(35:6-35:41),"int numeropessoas= stdin.nextInt();"
32,DECLARATIONSTATEMENT,"",sociologia.java(36:6-36:51),"GNode[] listadenos= new GNode[numeropessoas];"
33,DECLARATIONSTATEMENT,"",sociologia.java(37:6-37:60),"GNode[] listadenosinvertida= new GNode[numeropessoas];"
34,FORSTATEMENT,"",sociologia.java(38:6-41:7),"for(int i= 0; i< numeropessoas; i++){
		listadenosinvertida[i]= new GNode();
		listadenosinvertida[i].DFSresult.add(i+1);
	    }"
35,FORSTATEMENT,"",sociologia.java(42:6-56:7),"for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		int posicaono= stdin.nextInt();
		int posicaotemp= posicaono-1;
		listadenos[posicaotemp]= new GNode();
		listadenos[posicaotemp].DFSresult.add(posicaono);
		int numerofilhos= stdin.nextInt();
		if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}
	    }"
36,DECLARATIONSTATEMENT,"",sociologia.java(58:6-58:37),"Search DFSnormal= new Search();"
37,FORSTATEMENT,"",sociologia.java(59:6-64:7),"for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}
	    }"
38,DECLARATIONSTATEMENT,"",sociologia.java(65:6-65:40),"Search DFSinvertida= new Search();"
39,FORSTATEMENT,"",sociologia.java(66:6-71:7),"for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}
	    }"
40,DECLARATIONSTATEMENT,"",sociologia.java(73:6-73:30),"int contadordegrupos= 0;"
41,DECLARATIONSTATEMENT,"",sociologia.java(74:6-74:31),"int numerodenosdefora= 0;"
42,FORSTATEMENT,"",sociologia.java(75:6-89:7),"for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}
	    }"
43,FORSTATEMENT,"",sociologia.java(90:6-94:7),"for(int contadorpessoas= 0; contadorpessoas< numeropessoas; contadorpessoas++){
		if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}
	    }"
44,IFSTATEMENT,"",sociologia.java(95:6-97:7),"if(contadordegrupos== 0){
		numerodenosdefora= numeropessoas;
	    }"
45,MEMBERCALLEXPRESSION,"println",sociologia.java(98:6-98:55),"System.out.println(""Caso #"" + (contadorcasos+1));"
46,MEMBERCALLEXPRESSION,"println",sociologia.java(99:6-99:69),"System.out.println(contadordegrupos + "" "" + numerodenosdefora);"
47,VARIABLEDECLARATION,"numeropessoas",sociologia.java(35:10-35:40),"numeropessoas= stdin.nextInt()"
48,VARIABLEDECLARATION,"listadenos",sociologia.java(36:14-36:50),"listadenos= new GNode[numeropessoas]"
49,VARIABLEDECLARATION,"listadenosinvertida",sociologia.java(37:14-37:59),"listadenosinvertida= new GNode[numeropessoas]"
50,VARIABLEDECLARATION,"DFSnormal",sociologia.java(58:13-58:36),"DFSnormal= new Search()"
51,VARIABLEDECLARATION,"DFSinvertida",sociologia.java(65:13-65:39),"DFSinvertida= new Search()"
52,VARIABLEDECLARATION,"contadordegrupos",sociologia.java(73:10-73:29),"contadordegrupos= 0"
53,VARIABLEDECLARATION,"numerodenosdefora",sociologia.java(74:10-74:30),"numerodenosdefora= 0"
54,DECLAREDREFERENCEEXPRESSION,"contadorcasos",sociologia.java(34:56-34:69),"contadorcasos"
55,LITERAL,"",sociologia.java(66:31-66:32),"0"
56,LITERAL,"",sociologia.java(75:31-75:32),"0"
57,LITERAL,"",sociologia.java(74:29-74:30),"0"
58,DECLAREDREFERENCEEXPRESSION,"println",sociologia.java(99:17-99:24),"println"
59,BINARYOPERATOR,"+",sociologia.java(99:25-99:67),"contadordegrupos + "" "" + numerodenosdefora"
60,MEMBEREXPRESSION,"out",sociologia.java(99:6-99:16),"System.out"
61,DECLAREDREFERENCEEXPRESSION,"System",sociologia.java(99:6-99:12),"System"
62,DECLAREDREFERENCEEXPRESSION,"contadordegrupos",sociologia.java(99:25-99:41),"contadordegrupos"
63,BINARYOPERATOR,"+",sociologia.java(99:25-99:47),"contadordegrupos + "" """
64,DECLAREDREFERENCEEXPRESSION,"numerodenosdefora",sociologia.java(99:50-99:67),"numerodenosdefora"
65,LITERAL,"",sociologia.java(99:44-99:47),""" """
66,COMPOUNDSTATEMENT,"",sociologia.java(42:84-56:7),"{
		int posicaono= stdin.nextInt();
		int posicaotemp= posicaono-1;
		listadenos[posicaotemp]= new GNode();
		listadenos[posicaotemp].DFSresult.add(posicaono);
		int numerofilhos= stdin.nextInt();
		if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}
	    }"
67,DECLARATIONSTATEMENT,"",sociologia.java(42:10-42:32),"int contadorpessoas= 0"
68,BINARYOPERATOR,"<",sociologia.java(42:34-42:64),"contadorpessoas< numeropessoas"
69,UNARYOPERATOR,"++",sociologia.java(42:66-42:83),"contadorpessoas++"
70,VARIABLEDECLARATION,"contadorpessoas",sociologia.java(42:14-42:32),"contadorpessoas= 0"
71,DECLAREDREFERENCEEXPRESSION,"stdin",sociologia.java(43:18-43:23),"stdin"
72,CONSTRUCTEXPRESSION,"",sociologia.java(58:24-58:36),"new Search()"
73,LITERAL,"",sociologia.java(42:31-42:32),"0"
74,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(42:66-42:81),"contadorpessoas"
75,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(42:34-42:49),"contadorpessoas"
76,DECLARATIONSTATEMENT,"",sociologia.java(43:3-43:34),"int posicaono= stdin.nextInt();"
77,DECLARATIONSTATEMENT,"",sociologia.java(44:3-44:32),"int posicaotemp= posicaono-1;"
78,BINARYOPERATOR,"=",sociologia.java(45:3-45:40),"listadenos[posicaotemp]= new GNode();"
79,MEMBERCALLEXPRESSION,"add",sociologia.java(46:3-46:52),"listadenos[posicaotemp].DFSresult.add(posicaono);"
80,DECLARATIONSTATEMENT,"",sociologia.java(47:3-47:37),"int numerofilhos= stdin.nextInt();"
81,IFSTATEMENT,"",sociologia.java(48:3-55:4),"if(numerofilhos!= 0){
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}"
82,VARIABLEDECLARATION,"posicaono",sociologia.java(43:7-43:33),"posicaono= stdin.nextInt()"
83,VARIABLEDECLARATION,"posicaotemp",sociologia.java(44:7-44:31),"posicaotemp= posicaono-1"
84,VARIABLEDECLARATION,"numerofilhos",sociologia.java(47:7-47:36),"numerofilhos= stdin.nextInt()"
85,COMPOUNDSTATEMENT,"",sociologia.java(48:23-55:4),"{
		    for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }
		}"
86,DECLAREDREFERENCEEXPRESSION,"numerofilhos",sociologia.java(48:6-48:18),"numerofilhos"
87,MEMBERCALLEXPRESSION,"nextInt",sociologia.java(43:18-43:33),"stdin.nextInt()"
88,DECLAREDREFERENCEEXPRESSION,"nextInt",sociologia.java(43:24-43:31),"nextInt"
89,MEMBERCALLEXPRESSION,"nextInt",sociologia.java(47:21-47:36),"stdin.nextInt()"
90,DECLAREDREFERENCEEXPRESSION,"nextInt",sociologia.java(47:27-47:34),"nextInt"
91,DECLAREDREFERENCEEXPRESSION,"stdin",sociologia.java(47:21-47:26),"stdin"
92,BINARYOPERATOR,"!=",sociologia.java(48:6-48:22),"numerofilhos!= 0"
93,LITERAL,"",sociologia.java(49:31-49:32),"0"
94,FORSTATEMENT,"",sociologia.java(49:7-54:8),"for(int contadorfilhos= 0; contadorfilhos< numerofilhos; contadorfilhos++){
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }"
95,COMPOUNDSTATEMENT,"",sociologia.java(49:81-54:8),"{
			int valortemp= stdin.nextInt();
			int valortemptemp= valortemp-1;
			listadenos[posicaotemp].filhos.add(valortemp);
			listadenosinvertida[valortemptemp].filhos.add(posicaono);
		    }"
96,DECLARATIONSTATEMENT,"",sociologia.java(49:11-49:32),"int contadorfilhos= 0"
97,BINARYOPERATOR,"<",sociologia.java(49:34-49:62),"contadorfilhos< numerofilhos"
98,UNARYOPERATOR,"++",sociologia.java(49:64-49:80),"contadorfilhos++"
99,VARIABLEDECLARATION,"contadorfilhos",sociologia.java(49:15-49:32),"contadorfilhos= 0"
100,DECLAREDREFERENCEEXPRESSION,"stdin",sociologia.java(50:19-50:24),"stdin"
101,DECLARATIONSTATEMENT,"",sociologia.java(50:4-50:35),"int valortemp= stdin.nextInt();"
102,DECLARATIONSTATEMENT,"",sociologia.java(51:4-51:35),"int valortemptemp= valortemp-1;"
103,MEMBERCALLEXPRESSION,"add",sociologia.java(52:4-52:50),"listadenos[posicaotemp].filhos.add(valortemp);"
104,MEMBERCALLEXPRESSION,"add",sociologia.java(53:4-53:61),"listadenosinvertida[valortemptemp].filhos.add(posicaono);"
105,VARIABLEDECLARATION,"valortemp",sociologia.java(50:8-50:34),"valortemp= stdin.nextInt()"
106,VARIABLEDECLARATION,"valortemptemp",sociologia.java(51:8-51:34),"valortemptemp= valortemp-1"
107,DECLAREDREFERENCEEXPRESSION,"contadorfilhos",sociologia.java(49:64-49:78),"contadorfilhos"
108,MEMBERCALLEXPRESSION,"nextInt",sociologia.java(50:19-50:34),"stdin.nextInt()"
109,DECLAREDREFERENCEEXPRESSION,"nextInt",sociologia.java(50:25-50:32),"nextInt"
110,DECLAREDREFERENCEEXPRESSION,"valortemp",sociologia.java(51:23-51:32),"valortemp"
111,BINARYOPERATOR,"-",sociologia.java(51:23-51:34),"valortemp-1"
112,LITERAL,"",sociologia.java(51:33-51:34),"1"
113,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(52:4-52:14),"listadenos"
114,DECLAREDREFERENCEEXPRESSION,"add",sociologia.java(52:35-52:38),"add"
115,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(53:4-53:23),"listadenosinvertida"
116,DECLAREDREFERENCEEXPRESSION,"valortemp",sociologia.java(52:39-52:48),"valortemp"
117,MEMBEREXPRESSION,"filhos",sociologia.java(52:4-52:34),"listadenos[posicaotemp].filhos"
118,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(52:4-52:27),"listadenos[posicaotemp]"
119,DECLAREDREFERENCEEXPRESSION,"posicaotemp",sociologia.java(52:15-52:26),"posicaotemp"
120,DECLAREDREFERENCEEXPRESSION,"add",sociologia.java(53:46-53:49),"add"
121,DECLAREDREFERENCEEXPRESSION,"posicaono",sociologia.java(53:50-53:59),"posicaono"
122,MEMBEREXPRESSION,"filhos",sociologia.java(53:4-53:45),"listadenosinvertida[valortemptemp].filhos"
123,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(53:4-53:38),"listadenosinvertida[valortemptemp]"
124,DECLAREDREFERENCEEXPRESSION,"valortemptemp",sociologia.java(53:24-53:37),"valortemptemp"
125,DECLAREDREFERENCEEXPRESSION,"contadorfilhos",sociologia.java(49:34-49:48),"contadorfilhos"
126,DECLAREDREFERENCEEXPRESSION,"numerofilhos",sociologia.java(49:50-49:62),"numerofilhos"
127,LITERAL,"",sociologia.java(48:21-48:22),"0"
128,DECLAREDREFERENCEEXPRESSION,"posicaono",sociologia.java(44:20-44:29),"posicaono"
129,DECLAREDREFERENCEEXPRESSION,"add",sociologia.java(46:37-46:40),"add"
130,DECLAREDREFERENCEEXPRESSION,"posicaono",sociologia.java(46:41-46:50),"posicaono"
131,MEMBEREXPRESSION,"DFSresult",sociologia.java(46:3-46:36),"listadenos[posicaotemp].DFSresult"
132,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(46:3-46:26),"listadenos[posicaotemp]"
133,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(46:3-46:13),"listadenos"
134,DECLAREDREFERENCEEXPRESSION,"posicaotemp",sociologia.java(46:14-46:25),"posicaotemp"
135,BINARYOPERATOR,"-",sociologia.java(44:20-44:31),"posicaono-1"
136,LITERAL,"",sociologia.java(44:30-44:31),"1"
137,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(45:3-45:13),"listadenos"
138,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(45:3-45:26),"listadenos[posicaotemp]"
139,NEWEXPRESSION,"",sociologia.java(45:28-45:39),"new GNode()"
140,DECLAREDREFERENCEEXPRESSION,"posicaotemp",sociologia.java(45:14-45:25),"posicaotemp"
141,CONSTRUCTEXPRESSION,"",sociologia.java(45:28-45:39),"new GNode()"
142,CONSTRUCTORDECLARATION,"GNode",,""
143,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(42:51-42:64),"numeropessoas"
144,MEMBERCALLEXPRESSION,"nextInt",sociologia.java(35:25-35:40),"stdin.nextInt()"
145,DECLAREDREFERENCEEXPRESSION,"nextInt",sociologia.java(35:31-35:38),"nextInt"
146,NEWEXPRESSION,"",sociologia.java(65:27-65:39),"new Search()"
147,CONSTRUCTEXPRESSION,"",sociologia.java(65:27-65:39),"new Search()"
148,CONSTRUCTORDECLARATION,"Search",,""
149,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(36:36-36:49),"numeropessoas"
150,COMPOUNDSTATEMENT,"",sociologia.java(90:84-94:7),"{
		if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}
	    }"
151,DECLARATIONSTATEMENT,"",sociologia.java(90:10-90:32),"int contadorpessoas= 0"
152,BINARYOPERATOR,"<",sociologia.java(90:34-90:64),"contadorpessoas< numeropessoas"
153,UNARYOPERATOR,"++",sociologia.java(90:66-90:83),"contadorpessoas++"
154,VARIABLEDECLARATION,"contadorpessoas",sociologia.java(90:14-90:32),"contadorpessoas= 0"
155,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(91:6-91:16),"listadenos"
156,DECLAREDREFERENCEEXPRESSION,"contadordegrupos",sociologia.java(95:9-95:25),"contadordegrupos"
157,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(90:66-90:81),"contadorpessoas"
158,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(90:34-90:49),"contadorpessoas"
159,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(90:51-90:64),"numeropessoas"
160,IFSTATEMENT,"",sociologia.java(91:3-93:4),"if(listadenos[contadorpessoas].cor== 0){
		    numerodenosdefora++;
		}"
161,COMPOUNDSTATEMENT,"",sociologia.java(91:42-93:4),"{
		    numerodenosdefora++;
		}"
162,BINARYOPERATOR,"==",sociologia.java(91:6-91:41),"listadenos[contadorpessoas].cor== 0"
163,DECLAREDREFERENCEEXPRESSION,"numerodenosdefora",sociologia.java(92:7-92:24),"numerodenosdefora"
164,UNARYOPERATOR,"++",sociologia.java(92:7-92:27),"numerodenosdefora++;"
165,MEMBEREXPRESSION,"cor",sociologia.java(91:6-91:37),"listadenos[contadorpessoas].cor"
166,LITERAL,"",sociologia.java(91:40-91:41),"0"
167,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(91:6-91:33),"listadenos[contadorpessoas]"
168,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(91:17-91:32),"contadorpessoas"
169,LITERAL,"",sociologia.java(90:31-90:32),"0"
170,LITERAL,"",sociologia.java(59:31-59:32),"0"
171,ARRAYCREATIONEXPRESSION,"",sociologia.java(37:35-37:59),"new GNode[numeropessoas]"
172,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(37:45-37:58),"numeropessoas"
173,COMPOUNDSTATEMENT,"",sociologia.java(38:42-41:7),"{
		listadenosinvertida[i]= new GNode();
		listadenosinvertida[i].DFSresult.add(i+1);
	    }"
174,DECLARATIONSTATEMENT,"",sociologia.java(38:10-38:18),"int i= 0"
175,BINARYOPERATOR,"<",sociologia.java(38:20-38:36),"i< numeropessoas"
176,UNARYOPERATOR,"++",sociologia.java(38:38-38:41),"i++"
177,VARIABLEDECLARATION,"i",sociologia.java(38:14-38:18),"i= 0"
178,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(39:3-39:22),"listadenosinvertida"
179,BINARYOPERATOR,"=",sociologia.java(39:3-39:39),"listadenosinvertida[i]= new GNode();"
180,MEMBERCALLEXPRESSION,"add",sociologia.java(40:3-40:45),"listadenosinvertida[i].DFSresult.add(i+1);"
181,DECLAREDREFERENCEEXPRESSION,"i",sociologia.java(38:38-38:39),"i"
182,DECLAREDREFERENCEEXPRESSION,"add",sociologia.java(40:36-40:39),"add"
183,BINARYOPERATOR,"+",sociologia.java(40:40-40:43),"i+1"
184,DECLAREDREFERENCEEXPRESSION,"i",sociologia.java(40:40-40:41),"i"
185,LITERAL,"",sociologia.java(40:42-40:43),"1"
186,MEMBEREXPRESSION,"DFSresult",sociologia.java(40:3-40:35),"listadenosinvertida[i].DFSresult"
187,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(40:3-40:25),"listadenosinvertida[i]"
188,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(40:3-40:22),"listadenosinvertida"
189,DECLAREDREFERENCEEXPRESSION,"i",sociologia.java(40:23-40:24),"i"
190,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(39:3-39:25),"listadenosinvertida[i]"
191,NEWEXPRESSION,"",sociologia.java(39:27-39:38),"new GNode()"
192,CONSTRUCTEXPRESSION,"",sociologia.java(39:27-39:38),"new GNode()"
193,DECLAREDREFERENCEEXPRESSION,"i",sociologia.java(39:23-39:24),"i"
194,DECLAREDREFERENCEEXPRESSION,"i",sociologia.java(38:20-38:21),"i"
195,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(38:23-38:36),"numeropessoas"
196,LITERAL,"",sociologia.java(38:17-38:18),"0"
197,COMPOUNDSTATEMENT,"",sociologia.java(66:84-71:7),"{
		DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}
	    }"
198,DECLARATIONSTATEMENT,"",sociologia.java(66:10-66:32),"int contadorpessoas= 0"
199,BINARYOPERATOR,"<",sociologia.java(66:34-66:64),"contadorpessoas< numeropessoas"
200,UNARYOPERATOR,"++",sociologia.java(66:66-66:83),"contadorpessoas++"
201,VARIABLEDECLARATION,"contadorpessoas",sociologia.java(66:14-66:32),"contadorpessoas= 0"
202,DECLAREDREFERENCEEXPRESSION,"DFSinvertida",sociologia.java(67:3-67:15),"DFSinvertida"
203,LITERAL,"",sociologia.java(73:28-73:29),"0"
204,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(66:34-66:49),"contadorpessoas"
205,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(66:51-66:64),"numeropessoas"
206,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(66:66-66:81),"contadorpessoas"
207,MEMBERCALLEXPRESSION,"DFS",sociologia.java(67:3-67:117),"DFSinvertida.DFS(listadenosinvertida[contadorpessoas], listadenosinvertida, listadenosinvertida[contadorpessoas]);"
208,FORSTATEMENT,"",sociologia.java(68:3-70:4),"for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenosinvertida[resetnos].cor= 0;
		}"
209,COMPOUNDSTATEMENT,"",sociologia.java(68:60-70:4),"{
		    listadenosinvertida[resetnos].cor= 0;
		}"
210,DECLARATIONSTATEMENT,"",sociologia.java(68:7-68:22),"int resetnos= 0"
211,BINARYOPERATOR,"<",sociologia.java(68:24-68:47),"resetnos< numeropessoas"
212,UNARYOPERATOR,"++",sociologia.java(68:49-68:59),"resetnos++"
213,VARIABLEDECLARATION,"resetnos",sociologia.java(68:11-68:22),"resetnos= 0"
214,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(69:7-69:26),"listadenosinvertida"
215,LITERAL,"",sociologia.java(68:21-68:22),"0"
216,BINARYOPERATOR,"=",sociologia.java(69:7-69:44),"listadenosinvertida[resetnos].cor= 0;"
217,DECLAREDREFERENCEEXPRESSION,"resetnos",sociologia.java(68:49-68:57),"resetnos"
218,MEMBEREXPRESSION,"cor",sociologia.java(69:7-69:40),"listadenosinvertida[resetnos].cor"
219,LITERAL,"",sociologia.java(69:42-69:43),"0"
220,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(69:7-69:36),"listadenosinvertida[resetnos]"
221,DECLAREDREFERENCEEXPRESSION,"resetnos",sociologia.java(69:27-69:35),"resetnos"
222,DECLAREDREFERENCEEXPRESSION,"resetnos",sociologia.java(68:24-68:32),"resetnos"
223,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(68:34-68:47),"numeropessoas"
224,DECLAREDREFERENCEEXPRESSION,"DFS",sociologia.java(67:16-67:19),"DFS"
225,METHODDECLARATION,"DFS",,""
226,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(67:79-67:115),"listadenosinvertida[contadorpessoas]"
227,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(67:58-67:77),"listadenosinvertida"
228,PARAMVARIABLEDECLARATION,"gnodePtr1",,""
229,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(67:79-67:98),"listadenosinvertida"
230,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(67:20-67:56),"listadenosinvertida[contadorpessoas]"
231,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(67:99-67:114),"contadorpessoas"
232,PARAMVARIABLEDECLARATION,"gnode2",,""
233,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(67:20-67:39),"listadenosinvertida"
234,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(67:40-67:55),"contadorpessoas"
235,PARAMVARIABLEDECLARATION,"gnode0",,""
236,ARRAYCREATIONEXPRESSION,"",sociologia.java(36:26-36:50),"new GNode[numeropessoas]"
237,NEWEXPRESSION,"",sociologia.java(58:24-58:36),"new Search()"
238,DECLAREDREFERENCEEXPRESSION,"println",sociologia.java(98:17-98:24),"println"
239,BINARYOPERATOR,"+",sociologia.java(98:25-98:53),"""Caso #"" + (contadorcasos+1)"
240,LITERAL,"",sociologia.java(98:25-98:33),"""Caso #"""
241,BINARYOPERATOR,"+",sociologia.java(98:37-98:52),"contadorcasos+1"
242,DECLAREDREFERENCEEXPRESSION,"contadorcasos",sociologia.java(98:37-98:50),"contadorcasos"
243,MEMBEREXPRESSION,"out",sociologia.java(98:6-98:16),"System.out"
244,LITERAL,"",sociologia.java(98:51-98:52),"1"
245,DECLAREDREFERENCEEXPRESSION,"System",sociologia.java(98:6-98:12),"System"
246,COMPOUNDSTATEMENT,"",sociologia.java(95:30-97:7),"{
		numerodenosdefora= numeropessoas;
	    }"
247,BINARYOPERATOR,"==",sociologia.java(95:9-95:29),"contadordegrupos== 0"
248,DECLAREDREFERENCEEXPRESSION,"numerodenosdefora",sociologia.java(96:3-96:20),"numerodenosdefora"
249,LITERAL,"",sociologia.java(95:28-95:29),"0"
250,BINARYOPERATOR,"=",sociologia.java(96:3-96:36),"numerodenosdefora= numeropessoas;"
251,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(96:22-96:35),"numeropessoas"
252,COMPOUNDSTATEMENT,"",sociologia.java(59:84-64:7),"{
		DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);
		for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}
	    }"
253,DECLARATIONSTATEMENT,"",sociologia.java(59:10-59:32),"int contadorpessoas= 0"
254,BINARYOPERATOR,"<",sociologia.java(59:34-59:64),"contadorpessoas< numeropessoas"
255,UNARYOPERATOR,"++",sociologia.java(59:66-59:83),"contadorpessoas++"
256,VARIABLEDECLARATION,"contadorpessoas",sociologia.java(59:14-59:32),"contadorpessoas= 0"
257,DECLAREDREFERENCEEXPRESSION,"DFSnormal",sociologia.java(60:3-60:12),"DFSnormal"
258,MEMBERCALLEXPRESSION,"DFS",sociologia.java(60:3-60:87),"DFSnormal.DFS(listadenos[contadorpessoas], listadenos, listadenos[contadorpessoas]);"
259,FORSTATEMENT,"",sociologia.java(61:3-63:4),"for(int resetnos= 0; resetnos< numeropessoas; resetnos++){
		    listadenos[resetnos].cor= 0;
		}"
260,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(59:66-59:81),"contadorpessoas"
261,DECLAREDREFERENCEEXPRESSION,"DFS",sociologia.java(60:13-60:16),"DFS"
262,LITERAL,"",sociologia.java(61:21-61:22),"0"
263,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(60:58-60:85),"listadenos[contadorpessoas]"
264,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(60:46-60:56),"listadenos"
265,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(60:58-60:68),"listadenos"
266,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(60:17-60:44),"listadenos[contadorpessoas]"
267,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(60:17-60:27),"listadenos"
268,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(60:28-60:43),"contadorpessoas"
269,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(60:69-60:84),"contadorpessoas"
270,COMPOUNDSTATEMENT,"",sociologia.java(61:60-63:4),"{
		    listadenos[resetnos].cor= 0;
		}"
271,DECLARATIONSTATEMENT,"",sociologia.java(61:7-61:22),"int resetnos= 0"
272,BINARYOPERATOR,"<",sociologia.java(61:24-61:47),"resetnos< numeropessoas"
273,UNARYOPERATOR,"++",sociologia.java(61:49-61:59),"resetnos++"
274,VARIABLEDECLARATION,"resetnos",sociologia.java(61:11-61:22),"resetnos= 0"
275,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(62:7-62:17),"listadenos"
276,DECLAREDREFERENCEEXPRESSION,"resetnos",sociologia.java(61:24-61:32),"resetnos"
277,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(61:34-61:47),"numeropessoas"
278,BINARYOPERATOR,"=",sociologia.java(62:7-62:35),"listadenos[resetnos].cor= 0;"
279,DECLAREDREFERENCEEXPRESSION,"resetnos",sociologia.java(61:49-61:57),"resetnos"
280,MEMBEREXPRESSION,"cor",sociologia.java(62:7-62:31),"listadenos[resetnos].cor"
281,LITERAL,"",sociologia.java(62:33-62:34),"0"
282,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(62:7-62:27),"listadenos[resetnos]"
283,DECLAREDREFERENCEEXPRESSION,"resetnos",sociologia.java(62:18-62:26),"resetnos"
284,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(59:34-59:49),"contadorpessoas"
285,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(59:51-59:64),"numeropessoas"
286,COMPOUNDSTATEMENT,"",sociologia.java(75:84-89:7),"{
		if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}
	    }"
287,DECLARATIONSTATEMENT,"",sociologia.java(75:10-75:32),"int contadorpessoas= 0"
288,BINARYOPERATOR,"<",sociologia.java(75:34-75:64),"contadorpessoas< numeropessoas"
289,UNARYOPERATOR,"++",sociologia.java(75:66-75:83),"contadorpessoas++"
290,VARIABLEDECLARATION,"contadorpessoas",sociologia.java(75:14-75:32),"contadorpessoas= 0"
291,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(76:6-76:16),"listadenos"
292,IFSTATEMENT,"",sociologia.java(76:3-88:4),"if(listadenos[contadorpessoas].cor== 0){
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}"
293,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(75:66-75:81),"contadorpessoas"
294,COMPOUNDSTATEMENT,"",sociologia.java(76:42-88:4),"{
		    ArrayList<Integer> conjuncao= new ArrayList<Integer>();
		    conjuncao= listadenos[contadorpessoas].DFSresult;
		    conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);
		    for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }
		    if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }	
		}"
295,BINARYOPERATOR,"==",sociologia.java(76:6-76:41),"listadenos[contadorpessoas].cor== 0"
296,CONSTRUCTEXPRESSION,"",sociologia.java(77:37-77:61),"new ArrayList<Integer>()"
297,DECLARATIONSTATEMENT,"",sociologia.java(77:7-77:62),"ArrayList<Integer> conjuncao= new ArrayList<Integer>();"
298,BINARYOPERATOR,"=",sociologia.java(78:7-78:56),"conjuncao= listadenos[contadorpessoas].DFSresult;"
299,MEMBERCALLEXPRESSION,"retainAll",sociologia.java(79:7-79:75),"conjuncao.retainAll(listadenosinvertida[contadorpessoas].DFSresult);"
300,FORSTATEMENT,"",sociologia.java(80:7-84:8),"for(int l= 0; l< conjuncao.size(); l++){
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }"
301,IFSTATEMENT,"",sociologia.java(85:7-87:8),"if(conjuncao.size() >= 4){
			contadordegrupos++;
		    }"
302,VARIABLEDECLARATION,"conjuncao",sociologia.java(77:26-77:61),"conjuncao= new ArrayList<Integer>()"
303,COMPOUNDSTATEMENT,"",sociologia.java(85:32-87:8),"{
			contadordegrupos++;
		    }"
304,DECLAREDREFERENCEEXPRESSION,"conjuncao",sociologia.java(78:7-78:16),"conjuncao"
305,MEMBEREXPRESSION,"DFSresult",sociologia.java(78:18-78:55),"listadenos[contadorpessoas].DFSresult"
306,DECLAREDREFERENCEEXPRESSION,"conjuncao",sociologia.java(79:7-79:16),"conjuncao"
307,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(78:18-78:28),"listadenos"
308,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(78:18-78:45),"listadenos[contadorpessoas]"
309,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(78:29-78:44),"contadorpessoas"
310,NEWEXPRESSION,"",sociologia.java(77:37-77:61),"new ArrayList<Integer>()"
311,DECLAREDREFERENCEEXPRESSION,"retainAll",sociologia.java(79:17-79:26),"retainAll"
312,LITERAL,"",sociologia.java(80:18-80:19),"0"
313,MEMBEREXPRESSION,"DFSresult",sociologia.java(79:27-79:73),"listadenosinvertida[contadorpessoas].DFSresult"
314,DECLAREDREFERENCEEXPRESSION,"listadenosinvertida",sociologia.java(79:27-79:46),"listadenosinvertida"
315,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(79:27-79:63),"listadenosinvertida[contadorpessoas]"
316,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(79:47-79:62),"contadorpessoas"
317,BINARYOPERATOR,">=",sociologia.java(85:10-85:31),"conjuncao.size() >= 4"
318,DECLAREDREFERENCEEXPRESSION,"contadordegrupos",sociologia.java(86:4-86:20),"contadordegrupos"
319,UNARYOPERATOR,"++",sociologia.java(86:4-86:23),"contadordegrupos++;"
320,MEMBERCALLEXPRESSION,"size",sociologia.java(85:10-85:26),"conjuncao.size()"
321,LITERAL,"",sociologia.java(85:30-85:31),"4"
322,DECLAREDREFERENCEEXPRESSION,"size",sociologia.java(85:20-85:24),"size"
323,DECLAREDREFERENCEEXPRESSION,"conjuncao",sociologia.java(85:10-85:19),"conjuncao"
324,COMPOUNDSTATEMENT,"",sociologia.java(80:46-84:8),"{
			if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}
		    }"
325,DECLARATIONSTATEMENT,"",sociologia.java(80:11-80:19),"int l= 0"
326,BINARYOPERATOR,"<",sociologia.java(80:21-80:40),"l< conjuncao.size()"
327,UNARYOPERATOR,"++",sociologia.java(80:42-80:45),"l++"
328,VARIABLEDECLARATION,"l",sociologia.java(80:15-80:19),"l= 0"
329,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(81:7-81:17),"listadenos"
330,IFSTATEMENT,"",sociologia.java(81:4-83:5),"if(listadenos[contadorpessoas].DFSresult.size()!= 1){
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}"
331,DECLAREDREFERENCEEXPRESSION,"l",sociologia.java(80:42-80:43),"l"
332,COMPOUNDSTATEMENT,"",sociologia.java(81:56-83:5),"{
			    listadenos[(conjuncao.get(l))-1].cor= 1;
			}"
333,BINARYOPERATOR,"!=",sociologia.java(81:7-81:55),"listadenos[contadorpessoas].DFSresult.size()!= 1"
334,DECLAREDREFERENCEEXPRESSION,"listadenos",sociologia.java(82:8-82:18),"listadenos"
335,MEMBERCALLEXPRESSION,"size",sociologia.java(81:7-81:51),"listadenos[contadorpessoas].DFSresult.size()"
336,LITERAL,"",sociologia.java(81:54-81:55),"1"
337,DECLAREDREFERENCEEXPRESSION,"size",sociologia.java(81:45-81:49),"size"
338,MEMBEREXPRESSION,"DFSresult",sociologia.java(81:7-81:44),"listadenos[contadorpessoas].DFSresult"
339,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(81:7-81:34),"listadenos[contadorpessoas]"
340,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(81:18-81:33),"contadorpessoas"
341,BINARYOPERATOR,"=",sociologia.java(82:8-82:48),"listadenos[(conjuncao.get(l))-1].cor= 1;"
342,MEMBEREXPRESSION,"cor",sociologia.java(82:8-82:44),"listadenos[(conjuncao.get(l))-1].cor"
343,LITERAL,"",sociologia.java(82:46-82:47),"1"
344,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(82:8-82:40),"listadenos[(conjuncao.get(l))-1]"
345,BINARYOPERATOR,"-",sociologia.java(82:19-82:39),"(conjuncao.get(l))-1"
346,MEMBERCALLEXPRESSION,"get",sociologia.java(82:20-82:36),"conjuncao.get(l)"
347,LITERAL,"",sociologia.java(82:38-82:39),"1"
348,DECLAREDREFERENCEEXPRESSION,"get",sociologia.java(82:30-82:33),"get"
349,DECLAREDREFERENCEEXPRESSION,"l",sociologia.java(82:34-82:35),"l"
350,DECLAREDREFERENCEEXPRESSION,"conjuncao",sociologia.java(82:20-82:29),"conjuncao"
351,DECLAREDREFERENCEEXPRESSION,"l",sociologia.java(80:21-80:22),"l"
352,MEMBERCALLEXPRESSION,"size",sociologia.java(80:24-80:40),"conjuncao.size()"
353,DECLAREDREFERENCEEXPRESSION,"size",sociologia.java(80:34-80:38),"size"
354,DECLAREDREFERENCEEXPRESSION,"conjuncao",sociologia.java(80:24-80:33),"conjuncao"
355,MEMBEREXPRESSION,"cor",sociologia.java(76:6-76:37),"listadenos[contadorpessoas].cor"
356,LITERAL,"",sociologia.java(76:40-76:41),"0"
357,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(76:6-76:33),"listadenos[contadorpessoas]"
358,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(76:17-76:32),"contadorpessoas"
359,DECLAREDREFERENCEEXPRESSION,"contadorpessoas",sociologia.java(75:34-75:49),"contadorpessoas"
360,DECLAREDREFERENCEEXPRESSION,"numeropessoas",sociologia.java(75:51-75:64),"numeropessoas"
361,DECLAREDREFERENCEEXPRESSION,"stdin",sociologia.java(33:19-33:24),"stdin"
362,MEMBERCALLEXPRESSION,"nextInt",sociologia.java(33:19-33:34),"stdin.nextInt()"
363,DECLAREDREFERENCEEXPRESSION,"nextInt",sociologia.java(33:25-33:32),"nextInt"
364,FIELDDECLARATION,"this",,""
365,METHODDECLARATION,"DFS",sociologia.java(14:5-27:6),"public void DFS(GNode inicio, GNode[] listapontos, GNode origem){
	inicio.cor= 1;
	for(int k= 0; k< inicio.filhos.size(); k++){
	    int temp= inicio.filhos.get(k);
	    if(origem.DFSresult.contains(temp)== false){
		origem.DFSresult.add(temp);
	    }
	    GNode filho= new GNode();
	    if(listapontos[temp-1].cor== 0){
		filho= listapontos[temp-1];
	    }
	    DFS(filho, listapontos, origem);
	}
    }"
366,CONSTRUCTORDECLARATION,"Search",,""
367,VARIABLEDECLARATION,"this",,""
368,COMPOUNDSTATEMENT,"",sociologia.java(14:69-27:6),"{
	inicio.cor= 1;
	for(int k= 0; k< inicio.filhos.size(); k++){
	    int temp= inicio.filhos.get(k);
	    if(origem.DFSresult.contains(temp)== false){
		origem.DFSresult.add(temp);
	    }
	    GNode filho= new GNode();
	    if(listapontos[temp-1].cor== 0){
		filho= listapontos[temp-1];
	    }
	    DFS(filho, listapontos, origem);
	}
    }"
369,PARAMVARIABLEDECLARATION,"inicio",sociologia.java(14:21-14:33),"GNode inicio"
370,PARAMVARIABLEDECLARATION,"listapontos",sociologia.java(14:35-14:54),"GNode[] listapontos"
371,PARAMVARIABLEDECLARATION,"origem",sociologia.java(14:56-14:68),"GNode origem"
372,DECLAREDREFERENCEEXPRESSION,"inicio",sociologia.java(15:2-15:8),"inicio"
373,RETURNSTATEMENT,"",,""
374,BINARYOPERATOR,"=",sociologia.java(15:2-15:16),"inicio.cor= 1;"
375,FORSTATEMENT,"",sociologia.java(16:2-26:3),"for(int k= 0; k< inicio.filhos.size(); k++){
	    int temp= inicio.filhos.get(k);
	    if(origem.DFSresult.contains(temp)== false){
		origem.DFSresult.add(temp);
	    }
	    GNode filho= new GNode();
	    if(listapontos[temp-1].cor== 0){
		filho= listapontos[temp-1];
	    }
	    DFS(filho, listapontos, origem);
	}"
376,COMPOUNDSTATEMENT,"",sociologia.java(16:45-26:3),"{
	    int temp= inicio.filhos.get(k);
	    if(origem.DFSresult.contains(temp)== false){
		origem.DFSresult.add(temp);
	    }
	    GNode filho= new GNode();
	    if(listapontos[temp-1].cor== 0){
		filho= listapontos[temp-1];
	    }
	    DFS(filho, listapontos, origem);
	}"
377,DECLARATIONSTATEMENT,"",sociologia.java(16:6-16:14),"int k= 0"
378,BINARYOPERATOR,"<",sociologia.java(16:16-16:39),"k< inicio.filhos.size()"
379,UNARYOPERATOR,"++",sociologia.java(16:41-16:44),"k++"
380,VARIABLEDECLARATION,"k",sociologia.java(16:10-16:14),"k= 0"
381,DECLAREDREFERENCEEXPRESSION,"inicio",sociologia.java(17:16-17:22),"inicio"
382,DECLARATIONSTATEMENT,"",sociologia.java(17:6-17:37),"int temp= inicio.filhos.get(k);"
383,IFSTATEMENT,"",sociologia.java(18:6-20:7),"if(origem.DFSresult.contains(temp)== false){
		origem.DFSresult.add(temp);
	    }"
384,DECLARATIONSTATEMENT,"",sociologia.java(21:6-21:31),"GNode filho= new GNode();"
385,IFSTATEMENT,"",sociologia.java(22:6-24:7),"if(listapontos[temp-1].cor== 0){
		filho= listapontos[temp-1];
	    }"
386,CALLEXPRESSION,"DFS",sociologia.java(25:6-25:38),"DFS(filho, listapontos, origem);"
387,VARIABLEDECLARATION,"temp",sociologia.java(17:10-17:36),"temp= inicio.filhos.get(k)"
388,VARIABLEDECLARATION,"filho",sociologia.java(21:12-21:30),"filho= new GNode()"
389,DECLAREDREFERENCEEXPRESSION,"k",sociologia.java(16:41-16:42),"k"
390,BINARYOPERATOR,"==",sociologia.java(22:9-22:36),"listapontos[temp-1].cor== 0"
391,COMPOUNDSTATEMENT,"",sociologia.java(22:37-24:7),"{
		filho= listapontos[temp-1];
	    }"
392,DECLAREDREFERENCEEXPRESSION,"filho",sociologia.java(23:3-23:8),"filho"
393,DECLAREDREFERENCEEXPRESSION,"filho",sociologia.java(25:10-25:15),"filho"
394,MEMBEREXPRESSION,"cor",sociologia.java(22:9-22:32),"listapontos[temp-1].cor"
395,LITERAL,"",sociologia.java(22:35-22:36),"0"
396,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(22:9-22:28),"listapontos[temp-1]"
397,DECLAREDREFERENCEEXPRESSION,"listapontos",sociologia.java(22:9-22:20),"listapontos"
398,BINARYOPERATOR,"-",sociologia.java(22:21-22:27),"temp-1"
399,DECLAREDREFERENCEEXPRESSION,"temp",sociologia.java(22:21-22:25),"temp"
400,LITERAL,"",sociologia.java(22:26-22:27),"1"
401,BINARYOPERATOR,"=",sociologia.java(23:3-23:30),"filho= listapontos[temp-1];"
402,ARRAYSUBSCRIPTIONEXPRESSION,"",sociologia.java(23:10-23:29),"listapontos[temp-1]"
403,DECLAREDREFERENCEEXPRESSION,"listapontos",sociologia.java(23:10-23:21),"listapontos"
404,BINARYOPERATOR,"-",sociologia.java(23:22-23:28),"temp-1"
405,DECLAREDREFERENCEEXPRESSION,"temp",sociologia.java(23:22-23:26),"temp"
406,LITERAL,"",sociologia.java(23:27-23:28),"1"
407,DECLAREDREFERENCEEXPRESSION,"origem",sociologia.java(18:9-18:15),"origem"
408,NEWEXPRESSION,"",sociologia.java(21:19-21:30),"new GNode()"
409,CONSTRUCTEXPRESSION,"",sociologia.java(21:19-21:30),"new GNode()"
410,COMPOUNDSTATEMENT,"",sociologia.java(18:49-20:7),"{
		origem.DFSresult.add(temp);
	    }"
411,BINARYOPERATOR,"==",sociologia.java(18:9-18:48),"origem.DFSresult.contains(temp)== false"
412,DECLAREDREFERENCEEXPRESSION,"origem",sociologia.java(19:3-19:9),"origem"
413,MEMBERCALLEXPRESSION,"add",sociologia.java(19:3-19:30),"origem.DFSresult.add(temp);"
414,DECLAREDREFERENCEEXPRESSION,"add",sociologia.java(19:20-19:23),"add"
415,DECLAREDREFERENCEEXPRESSION,"temp",sociologia.java(19:24-19:28),"temp"
416,MEMBEREXPRESSION,"DFSresult",sociologia.java(19:3-19:19),"origem.DFSresult"
417,MEMBERCALLEXPRESSION,"contains",sociologia.java(18:9-18:40),"origem.DFSresult.contains(temp)"
418,LITERAL,"",sociologia.java(18:43-18:48),"false"
419,DECLAREDREFERENCEEXPRESSION,"contains",sociologia.java(18:26-18:34),"contains"
420,DECLAREDREFERENCEEXPRESSION,"temp",sociologia.java(18:35-18:39),"temp"
421,MEMBEREXPRESSION,"DFSresult",sociologia.java(18:9-18:25),"origem.DFSresult"
422,DECLAREDREFERENCEEXPRESSION,"listapontos",sociologia.java(25:17-25:28),"listapontos"
423,DECLAREDREFERENCEEXPRESSION,"origem",sociologia.java(25:30-25:36),"origem"
424,MEMBERCALLEXPRESSION,"get",sociologia.java(17:16-17:36),"inicio.filhos.get(k)"
425,DECLAREDREFERENCEEXPRESSION,"get",sociologia.java(17:30-17:33),"get"
426,DECLAREDREFERENCEEXPRESSION,"k",sociologia.java(17:34-17:35),"k"
427,MEMBEREXPRESSION,"filhos",sociologia.java(17:16-17:29),"inicio.filhos"
428,DECLAREDREFERENCEEXPRESSION,"k",sociologia.java(16:16-16:17),"k"
429,LITERAL,"",sociologia.java(16:13-16:14),"0"
430,MEMBERCALLEXPRESSION,"size",sociologia.java(16:19-16:39),"inicio.filhos.size()"
431,DECLAREDREFERENCEEXPRESSION,"size",sociologia.java(16:33-16:37),"size"
432,MEMBEREXPRESSION,"filhos",sociologia.java(16:19-16:32),"inicio.filhos"
433,DECLAREDREFERENCEEXPRESSION,"inicio",sociologia.java(16:19-16:25),"inicio"
434,MEMBEREXPRESSION,"cor",sociologia.java(15:2-15:12),"inicio.cor"
435,LITERAL,"",sociologia.java(15:14-15:15),"1"
436,FIELDDECLARATION,"this",,""
437,FIELDDECLARATION,"filhos",sociologia.java(4:5-4:64),"filhos = new ArrayList<Integer>()"
438,FIELDDECLARATION,"DFSresult",sociologia.java(5:5-5:67),"DFSresult = new ArrayList<Integer>()"
439,FIELDDECLARATION,"cor",sociologia.java(6:5-6:23),"cor = 0"
440,CONSTRUCTORDECLARATION,"GNode",,""
441,NEWEXPRESSION,"",sociologia.java(5:42-5:66),"new ArrayList<Integer>()"
442,CONSTRUCTEXPRESSION,"",sociologia.java(5:42-5:66),"new ArrayList<Integer>()"
443,LITERAL,"",sociologia.java(6:21-6:22),"0"
444,NEWEXPRESSION,"",sociologia.java(4:39-4:63),"new ArrayList<Integer>()"
445,CONSTRUCTEXPRESSION,"",sociologia.java(4:39-4:63),"new ArrayList<Integer>()"
