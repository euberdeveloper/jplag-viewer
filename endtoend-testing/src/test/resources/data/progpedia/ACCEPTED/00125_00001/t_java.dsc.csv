id,type,token,location,code
1,TRANSLATIONUNITDECLARATION,"/data/00000019/submissions/00725771_Sociologia_100307003/t.java",,""
2,RECORDDECLARATION,"No",t.java(4:1-19:2),"class No{
	int no;
	int tempof;
	LinkedList<No> adj;
	boolean visitado;
	
	No(int n){
		no = n;
		tempof = 0;
		adj = new LinkedList<No>();
		visitado = false;
	}
	void addLigacao(No x){
		adj.addLast(x);
	}
}"
3,RECORDDECLARATION,"Graph",t.java(21:1-119:2),"class Graph{
	int tempo, npessoas;
	No g[];
	No gt[];
	LinkedList<Integer> grupos;
	
	Graph(int np){
		this.npessoas = np;
		tempo = 0;
		g = new No[np+1];
		gt = new No[np+1];
		grupos = new LinkedList<Integer>();
	}
	private void inicializar(){
		for(int i = 1; i<=npessoas; i++){
			g[i] = new No(i);
			gt[i] = new No(i);
		}
	}
	void createGrafo(Scanner in){
		inicializar();
		for(int i = 1; i<=npessoas; i++){
			int pessoa = in.nextInt();
			int namigo = in.nextInt();
			for(int j = 0; j<namigo; j++){
				int amigo = in.nextInt();
				g[pessoa].addLigacao(g[amigo]);
				gt[amigo].addLigacao(gt[pessoa]);
			}
		}
	}
	
	void DFS(){
		for(int i = 1; i<=npessoas; i++){
			if(!g[i].visitado)
				DFSVisit(g[i]);
		}
	}
	private void DFSVisit(No x){
		tempo++;
		x.visitado = true;
		for(No cursor: x.adj){
			if(!cursor.visitado)
				DFSVisit(cursor);
		}
		tempo++;
		x.tempof =tempo;
		gt[x.no].tempof = tempo;
	}
	private No findMax(){
		int maximo = 0; 
		No max = new No(0);
		
		for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado){
				if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}
			}
		}
		return max;
	}
	private boolean allVisited(){
		for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado)
				return false;
		}
		return true;
	}
	
	void DFS_T(){
		while(!allVisited()){
			No TMax = findMax();
			int nelementos = NelementosGrupo(TMax);
			grupos.addLast(nelementos);
			TMax.tempof = 0;
		}
	}
	private int NelementosGrupo(No x){
		int count = 1;
		x.visitado = true;
		for(No cursor: x.adj){
			if(!cursor.visitado)
				count +=NelementosGrupo(cursor);
		}
		return count;
	}
	
	void Output(){
		int ngrupos = 0;
		int deFora = 0;
		for(int x: grupos){
			if(x>=4){ngrupos++;}
			else {deFora+=x;}
		}
		System.out.printf(""%d %d\n"", ngrupos, deFora);
	}
}"
4,RECORDDECLARATION,"t",t.java(120:1-137:2),"public class t {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int ncasos = in.nextInt();
		for(int i = 1; i<=ncasos; i++){
			int np = in.nextInt();
			Graph novo = new Graph(np);
			novo.createGrafo(in);
			novo.DFS();
			novo.DFS_T();
			
			System.out.printf(""Caso #%d\n"", i);
			novo.Output();
		}

	}

}"
5,INCLUDEDECLARATION,"java.util.LinkedList",,""
6,INCLUDEDECLARATION,"java.util.Scanner",,""
7,FIELDDECLARATION,"this",,""
8,FIELDDECLARATION,"no",t.java(5:2-5:9),"no"
9,FIELDDECLARATION,"tempof",t.java(6:2-6:13),"tempof"
10,FIELDDECLARATION,"adj",t.java(7:2-7:21),"adj"
11,FIELDDECLARATION,"visitado",t.java(8:2-8:19),"visitado"
12,METHODDECLARATION,"addLigacao",t.java(16:2-18:3),"void addLigacao(No x){
		adj.addLast(x);
	}"
13,CONSTRUCTORDECLARATION,"No",t.java(10:2-15:3),"No(int n){
		no = n;
		tempof = 0;
		adj = new LinkedList<No>();
		visitado = false;
	}"
14,VARIABLEDECLARATION,"this",,""
15,COMPOUNDSTATEMENT,"",t.java(16:23-18:3),"{
		adj.addLast(x);
	}"
16,PARAMVARIABLEDECLARATION,"x",t.java(16:18-16:22),"No x"
17,DECLAREDREFERENCEEXPRESSION,"this",t.java(17:3-17:6),"this"
18,RETURNSTATEMENT,"",,""
19,MEMBERCALLEXPRESSION,"addLast",t.java(17:3-17:18),"adj.addLast(x);"
20,DECLAREDREFERENCEEXPRESSION,"addLast",t.java(17:7-17:14),"addLast"
21,DECLAREDREFERENCEEXPRESSION,"x",t.java(17:15-17:16),"x"
22,MEMBEREXPRESSION,"adj",t.java(17:3-17:6),"adj"
23,COMPOUNDSTATEMENT,"",t.java(10:11-15:3),"{
		no = n;
		tempof = 0;
		adj = new LinkedList<No>();
		visitado = false;
	}"
24,PARAMVARIABLEDECLARATION,"n",t.java(10:5-10:10),"int n"
25,DECLAREDREFERENCEEXPRESSION,"this",t.java(11:3-11:5),"this"
26,RETURNSTATEMENT,"",,""
27,BINARYOPERATOR,"=",t.java(11:3-11:10),"no = n;"
28,BINARYOPERATOR,"=",t.java(12:3-12:14),"tempof = 0;"
29,BINARYOPERATOR,"=",t.java(13:3-13:30),"adj = new LinkedList<No>();"
30,BINARYOPERATOR,"=",t.java(14:3-14:20),"visitado = false;"
31,MEMBEREXPRESSION,"no",t.java(11:3-11:5),"no"
32,DECLAREDREFERENCEEXPRESSION,"n",t.java(11:8-11:9),"n"
33,DECLAREDREFERENCEEXPRESSION,"this",t.java(12:3-12:9),"this"
34,MEMBEREXPRESSION,"tempof",t.java(12:3-12:9),"tempof"
35,LITERAL,"",t.java(12:12-12:13),"0"
36,DECLAREDREFERENCEEXPRESSION,"this",t.java(13:3-13:6),"this"
37,MEMBEREXPRESSION,"adj",t.java(13:3-13:6),"adj"
38,NEWEXPRESSION,"",t.java(13:9-13:29),"new LinkedList<No>()"
39,DECLAREDREFERENCEEXPRESSION,"this",t.java(14:3-14:11),"this"
40,CONSTRUCTEXPRESSION,"",t.java(13:9-13:29),"new LinkedList<No>()"
41,MEMBEREXPRESSION,"visitado",t.java(14:3-14:11),"visitado"
42,LITERAL,"",t.java(14:14-14:19),"false"
43,FIELDDECLARATION,"this",,""
44,METHODDECLARATION,"main",t.java(121:2-135:3),"public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int ncasos = in.nextInt();
		for(int i = 1; i<=ncasos; i++){
			int np = in.nextInt();
			Graph novo = new Graph(np);
			novo.createGrafo(in);
			novo.DFS();
			novo.DFS_T();
			
			System.out.printf(""Caso #%d\n"", i);
			novo.Output();
		}

	}"
45,CONSTRUCTORDECLARATION,"t",,""
46,VARIABLEDECLARATION,"this",,""
47,COMPOUNDSTATEMENT,"",t.java(121:41-135:3),"{
		Scanner in = new Scanner(System.in);
		int ncasos = in.nextInt();
		for(int i = 1; i<=ncasos; i++){
			int np = in.nextInt();
			Graph novo = new Graph(np);
			novo.createGrafo(in);
			novo.DFS();
			novo.DFS_T();
			
			System.out.printf(""Caso #%d\n"", i);
			novo.Output();
		}

	}"
48,PARAMVARIABLEDECLARATION,"args",t.java(121:26-121:39),"String[] args"
49,DECLAREDREFERENCEEXPRESSION,"System",t.java(122:28-122:34),"System"
50,RETURNSTATEMENT,"",,""
51,DECLARATIONSTATEMENT,"",t.java(122:3-122:39),"Scanner in = new Scanner(System.in);"
52,DECLARATIONSTATEMENT,"",t.java(123:3-123:29),"int ncasos = in.nextInt();"
53,FORSTATEMENT,"",t.java(124:3-133:4),"for(int i = 1; i<=ncasos; i++){
			int np = in.nextInt();
			Graph novo = new Graph(np);
			novo.createGrafo(in);
			novo.DFS();
			novo.DFS_T();
			
			System.out.printf(""Caso #%d\n"", i);
			novo.Output();
		}"
54,VARIABLEDECLARATION,"in",t.java(122:11-122:38),"in = new Scanner(System.in)"
55,VARIABLEDECLARATION,"ncasos",t.java(123:7-123:28),"ncasos = in.nextInt()"
56,COMPOUNDSTATEMENT,"",t.java(124:33-133:4),"{
			int np = in.nextInt();
			Graph novo = new Graph(np);
			novo.createGrafo(in);
			novo.DFS();
			novo.DFS_T();
			
			System.out.printf(""Caso #%d\n"", i);
			novo.Output();
		}"
57,DECLARATIONSTATEMENT,"",t.java(124:7-124:16),"int i = 1"
58,BINARYOPERATOR,"<=",t.java(124:18-124:27),"i<=ncasos"
59,UNARYOPERATOR,"++",t.java(124:29-124:32),"i++"
60,VARIABLEDECLARATION,"i",t.java(124:11-124:16),"i = 1"
61,DECLAREDREFERENCEEXPRESSION,"in",t.java(125:13-125:15),"in"
62,DECLAREDREFERENCEEXPRESSION,"i",t.java(124:18-124:19),"i"
63,DECLAREDREFERENCEEXPRESSION,"ncasos",t.java(124:21-124:27),"ncasos"
64,LITERAL,"",t.java(124:15-124:16),"1"
65,DECLARATIONSTATEMENT,"",t.java(125:4-125:26),"int np = in.nextInt();"
66,DECLARATIONSTATEMENT,"",t.java(126:4-126:31),"Graph novo = new Graph(np);"
67,MEMBERCALLEXPRESSION,"createGrafo",t.java(127:4-127:25),"novo.createGrafo(in);"
68,MEMBERCALLEXPRESSION,"DFS",t.java(128:4-128:15),"novo.DFS();"
69,MEMBERCALLEXPRESSION,"DFS_T",t.java(129:4-129:17),"novo.DFS_T();"
70,MEMBERCALLEXPRESSION,"printf",t.java(131:4-131:39),"System.out.printf(""Caso #%d\n"", i);"
71,MEMBERCALLEXPRESSION,"Output",t.java(132:4-132:18),"novo.Output();"
72,VARIABLEDECLARATION,"np",t.java(125:8-125:25),"np = in.nextInt()"
73,VARIABLEDECLARATION,"novo",t.java(126:10-126:30),"novo = new Graph(np)"
74,DECLAREDREFERENCEEXPRESSION,"i",t.java(124:29-124:30),"i"
75,DECLAREDREFERENCEEXPRESSION,"novo",t.java(127:4-127:8),"novo"
76,NEWEXPRESSION,"",t.java(126:17-126:30),"new Graph(np)"
77,CONSTRUCTEXPRESSION,"",t.java(126:17-126:30),"new Graph(np)"
78,CONSTRUCTORDECLARATION,"Graph",Prob19.java(28:5-33:6),"Graph(int n) {
	this.n = n;
	nodes  = new Node[n+1]; // +1 se os comecam em 1 ao inves de 0
	for (int i=1; i<=n; i++)
	    nodes[i] = new Node();
    }"
79,DECLAREDREFERENCEEXPRESSION,"np",t.java(126:27-126:29),"np"
80,PARAMVARIABLEDECLARATION,"n",Prob19.java(28:11-28:16),"int n"
81,DECLAREDREFERENCEEXPRESSION,"DFS_T",t.java(129:9-129:14),"DFS_T"
82,METHODDECLARATION,"DFS_T",,""
83,DECLAREDREFERENCEEXPRESSION,"System",t.java(131:4-131:10),"System"
84,DECLAREDREFERENCEEXPRESSION,"novo",t.java(129:4-129:8),"novo"
85,DECLAREDREFERENCEEXPRESSION,"printf",t.java(131:15-131:21),"printf"
86,DECLAREDREFERENCEEXPRESSION,"novo",t.java(132:4-132:8),"novo"
87,DECLAREDREFERENCEEXPRESSION,"i",t.java(131:36-131:37),"i"
88,LITERAL,"",t.java(131:22-131:34),"""Caso #%d\n"""
89,MEMBEREXPRESSION,"out",t.java(131:4-131:14),"System.out"
90,MEMBERCALLEXPRESSION,"nextInt",t.java(125:13-125:25),"in.nextInt()"
91,DECLAREDREFERENCEEXPRESSION,"nextInt",t.java(125:16-125:23),"nextInt"
92,DECLAREDREFERENCEEXPRESSION,"DFS",t.java(128:9-128:12),"DFS"
93,METHODDECLARATION,"DFS",,""
94,DECLAREDREFERENCEEXPRESSION,"novo",t.java(128:4-128:8),"novo"
95,DECLAREDREFERENCEEXPRESSION,"createGrafo",t.java(127:9-127:20),"createGrafo"
96,METHODDECLARATION,"createGrafo",,""
97,DECLAREDREFERENCEEXPRESSION,"in",t.java(127:21-127:23),"in"
98,PARAMVARIABLEDECLARATION,"java.util.scanner0",,""
99,DECLAREDREFERENCEEXPRESSION,"Output",t.java(132:9-132:15),"Output"
100,METHODDECLARATION,"Output",,""
101,MEMBERCALLEXPRESSION,"nextInt",t.java(123:16-123:28),"in.nextInt()"
102,DECLAREDREFERENCEEXPRESSION,"nextInt",t.java(123:19-123:26),"nextInt"
103,DECLAREDREFERENCEEXPRESSION,"in",t.java(123:16-123:18),"in"
104,NEWEXPRESSION,"",t.java(122:16-122:38),"new Scanner(System.in)"
105,CONSTRUCTEXPRESSION,"",t.java(122:16-122:38),"new Scanner(System.in)"
106,MEMBEREXPRESSION,"in",t.java(122:28-122:37),"System.in"
107,FIELDDECLARATION,"this",,""
108,FIELDDECLARATION,"tempo",t.java(22:2-22:22),"tempo"
109,FIELDDECLARATION,"g",t.java(23:2-23:9),"g"
110,FIELDDECLARATION,"gt",t.java(24:2-24:10),"gt"
111,FIELDDECLARATION,"grupos",t.java(25:2-25:29),"grupos"
112,METHODDECLARATION,"inicializar",t.java(34:2-39:3),"private void inicializar(){
		for(int i = 1; i<=npessoas; i++){
			g[i] = new No(i);
			gt[i] = new No(i);
		}
	}"
113,METHODDECLARATION,"createGrafo",t.java(40:2-51:3),"void createGrafo(Scanner in){
		inicializar();
		for(int i = 1; i<=npessoas; i++){
			int pessoa = in.nextInt();
			int namigo = in.nextInt();
			for(int j = 0; j<namigo; j++){
				int amigo = in.nextInt();
				g[pessoa].addLigacao(g[amigo]);
				gt[amigo].addLigacao(gt[pessoa]);
			}
		}
	}"
114,METHODDECLARATION,"DFS",t.java(53:2-58:3),"void DFS(){
		for(int i = 1; i<=npessoas; i++){
			if(!g[i].visitado)
				DFSVisit(g[i]);
		}
	}"
115,METHODDECLARATION,"DFSVisit",t.java(59:2-69:3),"private void DFSVisit(No x){
		tempo++;
		x.visitado = true;
		for(No cursor: x.adj){
			if(!cursor.visitado)
				DFSVisit(cursor);
		}
		tempo++;
		x.tempof =tempo;
		gt[x.no].tempof = tempo;
	}"
116,METHODDECLARATION,"findMax",t.java(70:2-83:3),"private No findMax(){
		int maximo = 0; 
		No max = new No(0);
		
		for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado){
				if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}
			}
		}
		return max;
	}"
117,METHODDECLARATION,"allVisited",t.java(84:2-90:3),"private boolean allVisited(){
		for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado)
				return false;
		}
		return true;
	}"
118,METHODDECLARATION,"DFS_T",t.java(92:2-99:3),"void DFS_T(){
		while(!allVisited()){
			No TMax = findMax();
			int nelementos = NelementosGrupo(TMax);
			grupos.addLast(nelementos);
			TMax.tempof = 0;
		}
	}"
119,METHODDECLARATION,"NelementosGrupo",t.java(100:2-108:3),"private int NelementosGrupo(No x){
		int count = 1;
		x.visitado = true;
		for(No cursor: x.adj){
			if(!cursor.visitado)
				count +=NelementosGrupo(cursor);
		}
		return count;
	}"
120,METHODDECLARATION,"Output",t.java(110:2-118:3),"void Output(){
		int ngrupos = 0;
		int deFora = 0;
		for(int x: grupos){
			if(x>=4){ngrupos++;}
			else {deFora+=x;}
		}
		System.out.printf(""%d %d\n"", ngrupos, deFora);
	}"
121,CONSTRUCTORDECLARATION,"Graph",t.java(27:2-33:3),"Graph(int np){
		this.npessoas = np;
		tempo = 0;
		g = new No[np+1];
		gt = new No[np+1];
		grupos = new LinkedList<Integer>();
	}"
122,VARIABLEDECLARATION,"this",,""
123,COMPOUNDSTATEMENT,"",t.java(70:22-83:3),"{
		int maximo = 0; 
		No max = new No(0);
		
		for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado){
				if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}
			}
		}
		return max;
	}"
124,LITERAL,"",t.java(71:16-71:17),"0"
125,RETURNSTATEMENT,"",t.java(82:3-82:14),"return max;"
126,DECLARATIONSTATEMENT,"",t.java(71:3-71:18),"int maximo = 0;"
127,DECLARATIONSTATEMENT,"",t.java(72:3-72:22),"No max = new No(0);"
128,FORSTATEMENT,"",t.java(74:3-81:4),"for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado){
				if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}
			}
		}"
129,VARIABLEDECLARATION,"maximo",t.java(71:7-71:17),"maximo = 0"
130,VARIABLEDECLARATION,"max",t.java(72:6-72:21),"max = new No(0)"
131,DECLAREDREFERENCEEXPRESSION,"max",t.java(82:10-82:13),"max"
132,COMPOUNDSTATEMENT,"",t.java(74:35-81:4),"{
			if(!gt[i].visitado){
				if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}
			}
		}"
133,DECLARATIONSTATEMENT,"",t.java(74:7-74:16),"int i = 1"
134,BINARYOPERATOR,"<=",t.java(74:18-74:29),"i<=npessoas"
135,UNARYOPERATOR,"++",t.java(74:31-74:34),"i++"
136,VARIABLEDECLARATION,"i",t.java(74:11-74:16),"i = 1"
137,DECLAREDREFERENCEEXPRESSION,"this",t.java(75:8-75:10),"this"
138,DECLAREDREFERENCEEXPRESSION,"i",t.java(74:31-74:32),"i"
139,DECLAREDREFERENCEEXPRESSION,"i",t.java(74:18-74:19),"i"
140,IFSTATEMENT,"",t.java(75:4-80:5),"if(!gt[i].visitado){
				if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}
			}"
141,COMPOUNDSTATEMENT,"",t.java(75:23-80:5),"{
				if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}
			}"
142,UNARYOPERATOR,"!",t.java(75:7-75:22),"!gt[i].visitado"
143,DECLAREDREFERENCEEXPRESSION,"this",t.java(76:8-76:10),"this"
144,IFSTATEMENT,"",t.java(76:5-79:6),"if(gt[i].tempof > maximo){
					maximo = gt[i].tempof;
					max = gt[i];
				}"
145,COMPOUNDSTATEMENT,"",t.java(76:30-79:6),"{
					maximo = gt[i].tempof;
					max = gt[i];
				}"
146,BINARYOPERATOR,">",t.java(76:8-76:29),"gt[i].tempof > maximo"
147,DECLAREDREFERENCEEXPRESSION,"maximo",t.java(77:6-77:12),"maximo"
148,MEMBEREXPRESSION,"tempof",t.java(76:8-76:20),"gt[i].tempof"
149,DECLAREDREFERENCEEXPRESSION,"maximo",t.java(76:23-76:29),"maximo"
150,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(76:8-76:13),"gt[i]"
151,MEMBEREXPRESSION,"gt",t.java(76:8-76:10),"gt"
152,DECLAREDREFERENCEEXPRESSION,"i",t.java(76:11-76:12),"i"
153,BINARYOPERATOR,"=",t.java(77:6-77:28),"maximo = gt[i].tempof;"
154,BINARYOPERATOR,"=",t.java(78:6-78:18),"max = gt[i];"
155,DECLAREDREFERENCEEXPRESSION,"max",t.java(78:6-78:9),"max"
156,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(78:12-78:17),"gt[i]"
157,DECLAREDREFERENCEEXPRESSION,"this",t.java(78:12-78:14),"this"
158,MEMBEREXPRESSION,"gt",t.java(78:12-78:14),"gt"
159,DECLAREDREFERENCEEXPRESSION,"i",t.java(78:15-78:16),"i"
160,MEMBEREXPRESSION,"tempof",t.java(77:15-77:27),"gt[i].tempof"
161,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(77:15-77:20),"gt[i]"
162,MEMBEREXPRESSION,"gt",t.java(77:15-77:17),"gt"
163,DECLAREDREFERENCEEXPRESSION,"i",t.java(77:18-77:19),"i"
164,DECLAREDREFERENCEEXPRESSION,"this",t.java(77:15-77:17),"this"
165,MEMBEREXPRESSION,"visitado",t.java(75:8-75:22),"gt[i].visitado"
166,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(75:8-75:13),"gt[i]"
167,MEMBEREXPRESSION,"gt",t.java(75:8-75:10),"gt"
168,DECLAREDREFERENCEEXPRESSION,"i",t.java(75:11-75:12),"i"
169,LITERAL,"",t.java(74:15-74:16),"1"
170,MEMBEREXPRESSION,"npessoas",t.java(74:21-74:29),"npessoas"
171,DECLAREDREFERENCEEXPRESSION,"this",t.java(74:21-74:29),"this"
172,LITERAL,"",t.java(72:19-72:20),"0"
173,NEWEXPRESSION,"",t.java(72:12-72:21),"new No(0)"
174,CONSTRUCTEXPRESSION,"",t.java(72:12-72:21),"new No(0)"
175,CONSTRUCTORDECLARATION,"No",,""
176,PARAMVARIABLEDECLARATION,"int0",,""
177,VARIABLEDECLARATION,"this",,""
178,COMPOUNDSTATEMENT,"",t.java(100:35-108:3),"{
		int count = 1;
		x.visitado = true;
		for(No cursor: x.adj){
			if(!cursor.visitado)
				count +=NelementosGrupo(cursor);
		}
		return count;
	}"
179,PARAMVARIABLEDECLARATION,"x",t.java(100:30-100:34),"No x"
180,LITERAL,"",t.java(101:15-101:16),"1"
181,RETURNSTATEMENT,"",t.java(107:3-107:16),"return count;"
182,DECLARATIONSTATEMENT,"",t.java(101:3-101:17),"int count = 1;"
183,BINARYOPERATOR,"=",t.java(102:3-102:21),"x.visitado = true;"
184,FOREACHSTATEMENT,"",t.java(103:3-106:4),"for(No cursor: x.adj){
			if(!cursor.visitado)
				count +=NelementosGrupo(cursor);
		}"
185,VARIABLEDECLARATION,"count",t.java(101:7-101:16),"count = 1"
186,DECLAREDREFERENCEEXPRESSION,"x",t.java(102:3-102:4),"x"
187,MEMBEREXPRESSION,"visitado",t.java(102:3-102:13),"x.visitado"
188,LITERAL,"",t.java(102:16-102:20),"true"
189,DECLAREDREFERENCEEXPRESSION,"x",t.java(103:18-103:19),"x"
190,DECLAREDREFERENCEEXPRESSION,"count",t.java(107:10-107:15),"count"
191,DECLARATIONSTATEMENT,"",t.java(103:7-103:16),"No cursor"
192,MEMBEREXPRESSION,"adj",t.java(103:18-103:23),"x.adj"
193,COMPOUNDSTATEMENT,"",t.java(103:24-106:4),"{
			if(!cursor.visitado)
				count +=NelementosGrupo(cursor);
		}"
194,VARIABLEDECLARATION,"cursor",t.java(103:10-103:16),"cursor"
195,DECLAREDREFERENCEEXPRESSION,"cursor",t.java(104:8-104:14),"cursor"
196,UNINITIALIZEDVALUE,"Uninitialized Value",,""
197,IFSTATEMENT,"",t.java(104:4-105:37),"if(!cursor.visitado)
				count +=NelementosGrupo(cursor);"
198,BINARYOPERATOR,"+=",t.java(105:5-105:37),"count +=NelementosGrupo(cursor);"
199,UNARYOPERATOR,"!",t.java(104:7-104:23),"!cursor.visitado"
200,DECLAREDREFERENCEEXPRESSION,"count",t.java(105:5-105:10),"count"
201,MEMBEREXPRESSION,"visitado",t.java(104:8-104:23),"cursor.visitado"
202,CALLEXPRESSION,"NelementosGrupo",t.java(105:13-105:36),"NelementosGrupo(cursor)"
203,DECLAREDREFERENCEEXPRESSION,"cursor",t.java(105:29-105:35),"cursor"
204,METHODDECLARATION,"NelementosGrupo",,""
205,PARAMVARIABLEDECLARATION,"no0",,""
206,COMPOUNDSTATEMENT,"",t.java(27:15-33:3),"{
		this.npessoas = np;
		tempo = 0;
		g = new No[np+1];
		gt = new No[np+1];
		grupos = new LinkedList<Integer>();
	}"
207,PARAMVARIABLEDECLARATION,"np",t.java(27:8-27:14),"int np"
208,DECLAREDREFERENCEEXPRESSION,"this",t.java(28:3-28:7),"this"
209,RETURNSTATEMENT,"",,""
210,BINARYOPERATOR,"=",t.java(28:3-28:22),"this.npessoas = np;"
211,BINARYOPERATOR,"=",t.java(29:3-29:13),"tempo = 0;"
212,BINARYOPERATOR,"=",t.java(30:3-30:20),"g = new No[np+1];"
213,BINARYOPERATOR,"=",t.java(31:3-31:21),"gt = new No[np+1];"
214,BINARYOPERATOR,"=",t.java(32:3-32:38),"grupos = new LinkedList<Integer>();"
215,MEMBEREXPRESSION,"npessoas",t.java(28:3-28:16),"this.npessoas"
216,DECLAREDREFERENCEEXPRESSION,"np",t.java(28:19-28:21),"np"
217,DECLAREDREFERENCEEXPRESSION,"this",t.java(29:3-29:8),"this"
218,MEMBEREXPRESSION,"g",t.java(30:3-30:4),"g"
219,ARRAYCREATIONEXPRESSION,"",t.java(30:7-30:19),"new No[np+1]"
220,DECLAREDREFERENCEEXPRESSION,"this",t.java(31:3-31:5),"this"
221,DECLAREDREFERENCEEXPRESSION,"this",t.java(30:3-30:4),"this"
222,DECLAREDREFERENCEEXPRESSION,"np",t.java(30:14-30:16),"np"
223,BINARYOPERATOR,"+",t.java(30:14-30:18),"np+1"
224,LITERAL,"",t.java(30:17-30:18),"1"
225,MEMBEREXPRESSION,"gt",t.java(31:3-31:5),"gt"
226,ARRAYCREATIONEXPRESSION,"",t.java(31:8-31:20),"new No[np+1]"
227,DECLAREDREFERENCEEXPRESSION,"this",t.java(32:3-32:9),"this"
228,BINARYOPERATOR,"+",t.java(31:15-31:19),"np+1"
229,DECLAREDREFERENCEEXPRESSION,"np",t.java(31:15-31:17),"np"
230,LITERAL,"",t.java(31:18-31:19),"1"
231,MEMBEREXPRESSION,"grupos",t.java(32:3-32:9),"grupos"
232,NEWEXPRESSION,"",t.java(32:12-32:37),"new LinkedList<Integer>()"
233,CONSTRUCTEXPRESSION,"",t.java(32:12-32:37),"new LinkedList<Integer>()"
234,MEMBEREXPRESSION,"tempo",t.java(29:3-29:8),"tempo"
235,LITERAL,"",t.java(29:11-29:12),"0"
236,VARIABLEDECLARATION,"this",,""
237,COMPOUNDSTATEMENT,"",t.java(59:29-69:3),"{
		tempo++;
		x.visitado = true;
		for(No cursor: x.adj){
			if(!cursor.visitado)
				DFSVisit(cursor);
		}
		tempo++;
		x.tempof =tempo;
		gt[x.no].tempof = tempo;
	}"
238,PARAMVARIABLEDECLARATION,"x",t.java(59:24-59:28),"No x"
239,DECLAREDREFERENCEEXPRESSION,"this",t.java(60:3-60:8),"this"
240,RETURNSTATEMENT,"",,""
241,UNARYOPERATOR,"++",t.java(60:3-60:11),"tempo++;"
242,BINARYOPERATOR,"=",t.java(61:3-61:21),"x.visitado = true;"
243,FOREACHSTATEMENT,"",t.java(62:3-65:4),"for(No cursor: x.adj){
			if(!cursor.visitado)
				DFSVisit(cursor);
		}"
244,UNARYOPERATOR,"++",t.java(66:3-66:11),"tempo++;"
245,BINARYOPERATOR,"=",t.java(67:3-67:19),"x.tempof =tempo;"
246,BINARYOPERATOR,"=",t.java(68:3-68:27),"gt[x.no].tempof = tempo;"
247,MEMBEREXPRESSION,"visitado",t.java(61:3-61:13),"x.visitado"
248,LITERAL,"",t.java(61:16-61:20),"true"
249,DECLAREDREFERENCEEXPRESSION,"x",t.java(62:18-62:19),"x"
250,DECLAREDREFERENCEEXPRESSION,"x",t.java(61:3-61:4),"x"
251,MEMBEREXPRESSION,"tempof",t.java(67:3-67:11),"x.tempof"
252,MEMBEREXPRESSION,"tempo",t.java(67:13-67:18),"tempo"
253,DECLAREDREFERENCEEXPRESSION,"this",t.java(68:3-68:5),"this"
254,DECLAREDREFERENCEEXPRESSION,"this",t.java(67:13-67:18),"this"
255,DECLAREDREFERENCEEXPRESSION,"x",t.java(67:3-67:4),"x"
256,DECLARATIONSTATEMENT,"",t.java(62:7-62:16),"No cursor"
257,MEMBEREXPRESSION,"adj",t.java(62:18-62:23),"x.adj"
258,COMPOUNDSTATEMENT,"",t.java(62:24-65:4),"{
			if(!cursor.visitado)
				DFSVisit(cursor);
		}"
259,VARIABLEDECLARATION,"cursor",t.java(62:10-62:16),"cursor"
260,DECLAREDREFERENCEEXPRESSION,"cursor",t.java(63:8-63:14),"cursor"
261,DECLAREDREFERENCEEXPRESSION,"this",t.java(66:3-66:8),"this"
262,UNINITIALIZEDVALUE,"Uninitialized Value",,""
263,IFSTATEMENT,"",t.java(63:4-64:22),"if(!cursor.visitado)
				DFSVisit(cursor);"
264,CALLEXPRESSION,"DFSVisit",t.java(64:5-64:22),"DFSVisit(cursor);"
265,UNARYOPERATOR,"!",t.java(63:7-63:23),"!cursor.visitado"
266,DECLAREDREFERENCEEXPRESSION,"cursor",t.java(64:14-64:20),"cursor"
267,METHODDECLARATION,"DFSVisit",,""
268,PARAMVARIABLEDECLARATION,"no0",,""
269,MEMBEREXPRESSION,"visitado",t.java(63:8-63:23),"cursor.visitado"
270,MEMBEREXPRESSION,"tempo",t.java(66:3-66:8),"tempo"
271,MEMBEREXPRESSION,"tempo",t.java(60:3-60:8),"tempo"
272,MEMBEREXPRESSION,"tempof",t.java(68:3-68:18),"gt[x.no].tempof"
273,MEMBEREXPRESSION,"tempo",t.java(68:21-68:26),"tempo"
274,DECLAREDREFERENCEEXPRESSION,"this",t.java(68:21-68:26),"this"
275,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(68:3-68:11),"gt[x.no]"
276,MEMBEREXPRESSION,"gt",t.java(68:3-68:5),"gt"
277,MEMBEREXPRESSION,"no",t.java(68:6-68:10),"x.no"
278,DECLAREDREFERENCEEXPRESSION,"x",t.java(68:6-68:7),"x"
279,VARIABLEDECLARATION,"this",,""
280,COMPOUNDSTATEMENT,"",t.java(40:30-51:3),"{
		inicializar();
		for(int i = 1; i<=npessoas; i++){
			int pessoa = in.nextInt();
			int namigo = in.nextInt();
			for(int j = 0; j<namigo; j++){
				int amigo = in.nextInt();
				g[pessoa].addLigacao(g[amigo]);
				gt[amigo].addLigacao(gt[pessoa]);
			}
		}
	}"
281,PARAMVARIABLEDECLARATION,"in",t.java(40:19-40:29),"Scanner in"
282,CALLEXPRESSION,"inicializar",t.java(41:3-41:17),"inicializar();"
283,RETURNSTATEMENT,"",,""
284,FORSTATEMENT,"",t.java(42:3-50:4),"for(int i = 1; i<=npessoas; i++){
			int pessoa = in.nextInt();
			int namigo = in.nextInt();
			for(int j = 0; j<namigo; j++){
				int amigo = in.nextInt();
				g[pessoa].addLigacao(g[amigo]);
				gt[amigo].addLigacao(gt[pessoa]);
			}
		}"
285,METHODDECLARATION,"inicializar",,""
286,LITERAL,"",t.java(42:15-42:16),"1"
287,COMPOUNDSTATEMENT,"",t.java(42:35-50:4),"{
			int pessoa = in.nextInt();
			int namigo = in.nextInt();
			for(int j = 0; j<namigo; j++){
				int amigo = in.nextInt();
				g[pessoa].addLigacao(g[amigo]);
				gt[amigo].addLigacao(gt[pessoa]);
			}
		}"
288,DECLARATIONSTATEMENT,"",t.java(42:7-42:16),"int i = 1"
289,BINARYOPERATOR,"<=",t.java(42:18-42:29),"i<=npessoas"
290,UNARYOPERATOR,"++",t.java(42:31-42:34),"i++"
291,VARIABLEDECLARATION,"i",t.java(42:11-42:16),"i = 1"
292,DECLAREDREFERENCEEXPRESSION,"in",t.java(43:17-43:19),"in"
293,DECLARATIONSTATEMENT,"",t.java(43:4-43:30),"int pessoa = in.nextInt();"
294,DECLARATIONSTATEMENT,"",t.java(44:4-44:30),"int namigo = in.nextInt();"
295,FORSTATEMENT,"",t.java(45:4-49:5),"for(int j = 0; j<namigo; j++){
				int amigo = in.nextInt();
				g[pessoa].addLigacao(g[amigo]);
				gt[amigo].addLigacao(gt[pessoa]);
			}"
296,VARIABLEDECLARATION,"pessoa",t.java(43:8-43:29),"pessoa = in.nextInt()"
297,VARIABLEDECLARATION,"namigo",t.java(44:8-44:29),"namigo = in.nextInt()"
298,DECLAREDREFERENCEEXPRESSION,"i",t.java(42:31-42:32),"i"
299,MEMBERCALLEXPRESSION,"nextInt",t.java(44:17-44:29),"in.nextInt()"
300,DECLAREDREFERENCEEXPRESSION,"nextInt",t.java(44:20-44:27),"nextInt"
301,DECLAREDREFERENCEEXPRESSION,"in",t.java(44:17-44:19),"in"
302,MEMBERCALLEXPRESSION,"nextInt",t.java(43:17-43:29),"in.nextInt()"
303,DECLAREDREFERENCEEXPRESSION,"nextInt",t.java(43:20-43:27),"nextInt"
304,LITERAL,"",t.java(45:16-45:17),"0"
305,COMPOUNDSTATEMENT,"",t.java(45:33-49:5),"{
				int amigo = in.nextInt();
				g[pessoa].addLigacao(g[amigo]);
				gt[amigo].addLigacao(gt[pessoa]);
			}"
306,DECLARATIONSTATEMENT,"",t.java(45:8-45:17),"int j = 0"
307,BINARYOPERATOR,"<",t.java(45:19-45:27),"j<namigo"
308,UNARYOPERATOR,"++",t.java(45:29-45:32),"j++"
309,VARIABLEDECLARATION,"j",t.java(45:12-45:17),"j = 0"
310,DECLAREDREFERENCEEXPRESSION,"in",t.java(46:17-46:19),"in"
311,DECLARATIONSTATEMENT,"",t.java(46:5-46:30),"int amigo = in.nextInt();"
312,MEMBERCALLEXPRESSION,"addLigacao",t.java(47:5-47:36),"g[pessoa].addLigacao(g[amigo]);"
313,MEMBERCALLEXPRESSION,"addLigacao",t.java(48:5-48:38),"gt[amigo].addLigacao(gt[pessoa]);"
314,VARIABLEDECLARATION,"amigo",t.java(46:9-46:29),"amigo = in.nextInt()"
315,DECLAREDREFERENCEEXPRESSION,"j",t.java(45:29-45:30),"j"
316,DECLAREDREFERENCEEXPRESSION,"addLigacao",t.java(48:15-48:25),"addLigacao"
317,METHODDECLARATION,"addLigacao",,""
318,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(48:26-48:36),"gt[pessoa]"
319,MEMBEREXPRESSION,"gt",t.java(48:26-48:28),"gt"
320,DECLAREDREFERENCEEXPRESSION,"pessoa",t.java(48:29-48:35),"pessoa"
321,PARAMVARIABLEDECLARATION,"no0",,""
322,DECLAREDREFERENCEEXPRESSION,"this",t.java(48:26-48:28),"this"
323,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(48:5-48:14),"gt[amigo]"
324,MEMBEREXPRESSION,"gt",t.java(48:5-48:7),"gt"
325,DECLAREDREFERENCEEXPRESSION,"amigo",t.java(48:8-48:13),"amigo"
326,DECLAREDREFERENCEEXPRESSION,"this",t.java(48:5-48:7),"this"
327,MEMBERCALLEXPRESSION,"nextInt",t.java(46:17-46:29),"in.nextInt()"
328,DECLAREDREFERENCEEXPRESSION,"nextInt",t.java(46:20-46:27),"nextInt"
329,DECLAREDREFERENCEEXPRESSION,"this",t.java(47:5-47:6),"this"
330,DECLAREDREFERENCEEXPRESSION,"addLigacao",t.java(47:15-47:25),"addLigacao"
331,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(47:26-47:34),"g[amigo]"
332,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(47:5-47:14),"g[pessoa]"
333,MEMBEREXPRESSION,"g",t.java(47:5-47:6),"g"
334,DECLAREDREFERENCEEXPRESSION,"pessoa",t.java(47:7-47:13),"pessoa"
335,DECLAREDREFERENCEEXPRESSION,"this",t.java(47:26-47:27),"this"
336,MEMBEREXPRESSION,"g",t.java(47:26-47:27),"g"
337,DECLAREDREFERENCEEXPRESSION,"amigo",t.java(47:28-47:33),"amigo"
338,DECLAREDREFERENCEEXPRESSION,"j",t.java(45:19-45:20),"j"
339,DECLAREDREFERENCEEXPRESSION,"namigo",t.java(45:21-45:27),"namigo"
340,DECLAREDREFERENCEEXPRESSION,"i",t.java(42:18-42:19),"i"
341,MEMBEREXPRESSION,"npessoas",t.java(42:21-42:29),"npessoas"
342,DECLAREDREFERENCEEXPRESSION,"this",t.java(42:21-42:29),"this"
343,VARIABLEDECLARATION,"this",,""
344,COMPOUNDSTATEMENT,"",t.java(84:30-90:3),"{
		for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado)
				return false;
		}
		return true;
	}"
345,LITERAL,"",t.java(85:15-85:16),"1"
346,RETURNSTATEMENT,"",t.java(89:3-89:15),"return true;"
347,FORSTATEMENT,"",t.java(85:3-88:4),"for(int i = 1; i<=npessoas; i++){
			if(!gt[i].visitado)
				return false;
		}"
348,LITERAL,"",t.java(89:10-89:14),"true"
349,COMPOUNDSTATEMENT,"",t.java(85:35-88:4),"{
			if(!gt[i].visitado)
				return false;
		}"
350,DECLARATIONSTATEMENT,"",t.java(85:7-85:16),"int i = 1"
351,BINARYOPERATOR,"<=",t.java(85:18-85:29),"i<=npessoas"
352,UNARYOPERATOR,"++",t.java(85:31-85:34),"i++"
353,VARIABLEDECLARATION,"i",t.java(85:11-85:16),"i = 1"
354,DECLAREDREFERENCEEXPRESSION,"this",t.java(86:8-86:10),"this"
355,DECLAREDREFERENCEEXPRESSION,"i",t.java(85:18-85:19),"i"
356,MEMBEREXPRESSION,"npessoas",t.java(85:21-85:29),"npessoas"
357,DECLAREDREFERENCEEXPRESSION,"this",t.java(85:21-85:29),"this"
358,DECLAREDREFERENCEEXPRESSION,"i",t.java(85:31-85:32),"i"
359,IFSTATEMENT,"",t.java(86:4-87:18),"if(!gt[i].visitado)
				return false;"
360,UNARYOPERATOR,"!",t.java(86:7-86:22),"!gt[i].visitado"
361,RETURNSTATEMENT,"",t.java(87:5-87:18),"return false;"
362,LITERAL,"",t.java(87:12-87:17),"false"
363,MEMBEREXPRESSION,"visitado",t.java(86:8-86:22),"gt[i].visitado"
364,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(86:8-86:13),"gt[i]"
365,MEMBEREXPRESSION,"gt",t.java(86:8-86:10),"gt"
366,DECLAREDREFERENCEEXPRESSION,"i",t.java(86:11-86:12),"i"
367,VARIABLEDECLARATION,"this",,""
368,COMPOUNDSTATEMENT,"",t.java(92:14-99:3),"{
		while(!allVisited()){
			No TMax = findMax();
			int nelementos = NelementosGrupo(TMax);
			grupos.addLast(nelementos);
			TMax.tempof = 0;
		}
	}"
369,CALLEXPRESSION,"allVisited",t.java(93:10-93:22),"allVisited()"
370,RETURNSTATEMENT,"",,""
371,WHILESTATEMENT,"",t.java(93:3-98:4),"while(!allVisited()){
			No TMax = findMax();
			int nelementos = NelementosGrupo(TMax);
			grupos.addLast(nelementos);
			TMax.tempof = 0;
		}"
372,UNARYOPERATOR,"!",t.java(93:9-93:22),"!allVisited()"
373,COMPOUNDSTATEMENT,"",t.java(93:23-98:4),"{
			No TMax = findMax();
			int nelementos = NelementosGrupo(TMax);
			grupos.addLast(nelementos);
			TMax.tempof = 0;
		}"
374,CALLEXPRESSION,"findMax",t.java(94:14-94:23),"findMax()"
375,DECLARATIONSTATEMENT,"",t.java(94:4-94:24),"No TMax = findMax();"
376,DECLARATIONSTATEMENT,"",t.java(95:4-95:43),"int nelementos = NelementosGrupo(TMax);"
377,MEMBERCALLEXPRESSION,"addLast",t.java(96:4-96:31),"grupos.addLast(nelementos);"
378,BINARYOPERATOR,"=",t.java(97:4-97:20),"TMax.tempof = 0;"
379,VARIABLEDECLARATION,"TMax",t.java(94:7-94:23),"TMax = findMax()"
380,VARIABLEDECLARATION,"nelementos",t.java(95:8-95:42),"nelementos = NelementosGrupo(TMax)"
381,DECLAREDREFERENCEEXPRESSION,"this",t.java(96:4-96:10),"this"
382,DECLAREDREFERENCEEXPRESSION,"addLast",t.java(96:11-96:18),"addLast"
383,DECLAREDREFERENCEEXPRESSION,"TMax",t.java(97:4-97:8),"TMax"
384,DECLAREDREFERENCEEXPRESSION,"nelementos",t.java(96:19-96:29),"nelementos"
385,MEMBEREXPRESSION,"grupos",t.java(96:4-96:10),"grupos"
386,CALLEXPRESSION,"NelementosGrupo",t.java(95:21-95:42),"NelementosGrupo(TMax)"
387,DECLAREDREFERENCEEXPRESSION,"TMax",t.java(95:37-95:41),"TMax"
388,METHODDECLARATION,"findMax",,""
389,MEMBEREXPRESSION,"tempof",t.java(97:4-97:15),"TMax.tempof"
390,LITERAL,"",t.java(97:18-97:19),"0"
391,METHODDECLARATION,"allVisited",,""
392,VARIABLEDECLARATION,"this",,""
393,COMPOUNDSTATEMENT,"",t.java(34:28-39:3),"{
		for(int i = 1; i<=npessoas; i++){
			g[i] = new No(i);
			gt[i] = new No(i);
		}
	}"
394,LITERAL,"",t.java(35:15-35:16),"1"
395,RETURNSTATEMENT,"",,""
396,FORSTATEMENT,"",t.java(35:3-38:4),"for(int i = 1; i<=npessoas; i++){
			g[i] = new No(i);
			gt[i] = new No(i);
		}"
397,COMPOUNDSTATEMENT,"",t.java(35:35-38:4),"{
			g[i] = new No(i);
			gt[i] = new No(i);
		}"
398,DECLARATIONSTATEMENT,"",t.java(35:7-35:16),"int i = 1"
399,BINARYOPERATOR,"<=",t.java(35:18-35:29),"i<=npessoas"
400,UNARYOPERATOR,"++",t.java(35:31-35:34),"i++"
401,VARIABLEDECLARATION,"i",t.java(35:11-35:16),"i = 1"
402,DECLAREDREFERENCEEXPRESSION,"this",t.java(36:4-36:5),"this"
403,DECLAREDREFERENCEEXPRESSION,"i",t.java(35:18-35:19),"i"
404,MEMBEREXPRESSION,"npessoas",t.java(35:21-35:29),"npessoas"
405,DECLAREDREFERENCEEXPRESSION,"this",t.java(35:21-35:29),"this"
406,BINARYOPERATOR,"=",t.java(36:4-36:21),"g[i] = new No(i);"
407,BINARYOPERATOR,"=",t.java(37:4-37:22),"gt[i] = new No(i);"
408,DECLAREDREFERENCEEXPRESSION,"i",t.java(35:31-35:32),"i"
409,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(36:4-36:8),"g[i]"
410,NEWEXPRESSION,"",t.java(36:11-36:20),"new No(i)"
411,DECLAREDREFERENCEEXPRESSION,"this",t.java(37:4-37:6),"this"
412,MEMBEREXPRESSION,"g",t.java(36:4-36:5),"g"
413,DECLAREDREFERENCEEXPRESSION,"i",t.java(36:6-36:7),"i"
414,DECLAREDREFERENCEEXPRESSION,"i",t.java(36:18-36:19),"i"
415,CONSTRUCTEXPRESSION,"",t.java(36:11-36:20),"new No(i)"
416,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(37:4-37:9),"gt[i]"
417,NEWEXPRESSION,"",t.java(37:12-37:21),"new No(i)"
418,CONSTRUCTEXPRESSION,"",t.java(37:12-37:21),"new No(i)"
419,DECLAREDREFERENCEEXPRESSION,"i",t.java(37:19-37:20),"i"
420,MEMBEREXPRESSION,"gt",t.java(37:4-37:6),"gt"
421,DECLAREDREFERENCEEXPRESSION,"i",t.java(37:7-37:8),"i"
422,VARIABLEDECLARATION,"this",,""
423,COMPOUNDSTATEMENT,"",t.java(53:12-58:3),"{
		for(int i = 1; i<=npessoas; i++){
			if(!g[i].visitado)
				DFSVisit(g[i]);
		}
	}"
424,LITERAL,"",t.java(54:15-54:16),"1"
425,RETURNSTATEMENT,"",,""
426,FORSTATEMENT,"",t.java(54:3-57:4),"for(int i = 1; i<=npessoas; i++){
			if(!g[i].visitado)
				DFSVisit(g[i]);
		}"
427,COMPOUNDSTATEMENT,"",t.java(54:35-57:4),"{
			if(!g[i].visitado)
				DFSVisit(g[i]);
		}"
428,DECLARATIONSTATEMENT,"",t.java(54:7-54:16),"int i = 1"
429,BINARYOPERATOR,"<=",t.java(54:18-54:29),"i<=npessoas"
430,UNARYOPERATOR,"++",t.java(54:31-54:34),"i++"
431,VARIABLEDECLARATION,"i",t.java(54:11-54:16),"i = 1"
432,DECLAREDREFERENCEEXPRESSION,"this",t.java(55:8-55:9),"this"
433,IFSTATEMENT,"",t.java(55:4-56:20),"if(!g[i].visitado)
				DFSVisit(g[i]);"
434,DECLAREDREFERENCEEXPRESSION,"i",t.java(54:31-54:32),"i"
435,CALLEXPRESSION,"DFSVisit",t.java(56:5-56:20),"DFSVisit(g[i]);"
436,UNARYOPERATOR,"!",t.java(55:7-55:21),"!g[i].visitado"
437,DECLAREDREFERENCEEXPRESSION,"this",t.java(56:14-56:15),"this"
438,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(56:14-56:18),"g[i]"
439,MEMBEREXPRESSION,"g",t.java(56:14-56:15),"g"
440,DECLAREDREFERENCEEXPRESSION,"i",t.java(56:16-56:17),"i"
441,MEMBEREXPRESSION,"visitado",t.java(55:8-55:21),"g[i].visitado"
442,ARRAYSUBSCRIPTIONEXPRESSION,"",t.java(55:8-55:12),"g[i]"
443,MEMBEREXPRESSION,"g",t.java(55:8-55:9),"g"
444,DECLAREDREFERENCEEXPRESSION,"i",t.java(55:10-55:11),"i"
445,DECLAREDREFERENCEEXPRESSION,"i",t.java(54:18-54:19),"i"
446,MEMBEREXPRESSION,"npessoas",t.java(54:21-54:29),"npessoas"
447,DECLAREDREFERENCEEXPRESSION,"this",t.java(54:21-54:29),"this"
448,VARIABLEDECLARATION,"this",,""
449,COMPOUNDSTATEMENT,"",t.java(110:15-118:3),"{
		int ngrupos = 0;
		int deFora = 0;
		for(int x: grupos){
			if(x>=4){ngrupos++;}
			else {deFora+=x;}
		}
		System.out.printf(""%d %d\n"", ngrupos, deFora);
	}"
450,LITERAL,"",t.java(111:17-111:18),"0"
451,RETURNSTATEMENT,"",,""
452,DECLARATIONSTATEMENT,"",t.java(111:3-111:19),"int ngrupos = 0;"
453,DECLARATIONSTATEMENT,"",t.java(112:3-112:18),"int deFora = 0;"
454,FOREACHSTATEMENT,"",t.java(113:3-116:4),"for(int x: grupos){
			if(x>=4){ngrupos++;}
			else {deFora+=x;}
		}"
455,MEMBERCALLEXPRESSION,"printf",t.java(117:3-117:49),"System.out.printf(""%d %d\n"", ngrupos, deFora);"
456,VARIABLEDECLARATION,"ngrupos",t.java(111:7-111:18),"ngrupos = 0"
457,VARIABLEDECLARATION,"deFora",t.java(112:7-112:17),"deFora = 0"
458,DECLAREDREFERENCEEXPRESSION,"this",t.java(113:14-113:20),"this"
459,LITERAL,"",t.java(112:16-112:17),"0"
460,DECLARATIONSTATEMENT,"",t.java(113:7-113:12),"int x"
461,MEMBEREXPRESSION,"grupos",t.java(113:14-113:20),"grupos"
462,COMPOUNDSTATEMENT,"",t.java(113:21-116:4),"{
			if(x>=4){ngrupos++;}
			else {deFora+=x;}
		}"
463,VARIABLEDECLARATION,"x",t.java(113:11-113:12),"x"
464,DECLAREDREFERENCEEXPRESSION,"x",t.java(114:7-114:8),"x"
465,DECLAREDREFERENCEEXPRESSION,"System",t.java(117:3-117:9),"System"
466,UNINITIALIZEDVALUE,"Uninitialized Value",,""
467,IFSTATEMENT,"",t.java(114:4-115:21),"if(x>=4){ngrupos++;}
			else {deFora+=x;}"
468,COMPOUNDSTATEMENT,"",t.java(114:12-114:24),"{ngrupos++;}"
469,COMPOUNDSTATEMENT,"",t.java(115:9-115:21),"{deFora+=x;}"
470,BINARYOPERATOR,">=",t.java(114:7-114:11),"x>=4"
471,DECLAREDREFERENCEEXPRESSION,"ngrupos",t.java(114:13-114:20),"ngrupos"
472,DECLAREDREFERENCEEXPRESSION,"deFora",t.java(115:10-115:16),"deFora"
473,UNARYOPERATOR,"++",t.java(114:13-114:23),"ngrupos++;"
474,LITERAL,"",t.java(114:10-114:11),"4"
475,BINARYOPERATOR,"+=",t.java(115:10-115:20),"deFora+=x;"
476,DECLAREDREFERENCEEXPRESSION,"x",t.java(115:18-115:19),"x"
477,DECLAREDREFERENCEEXPRESSION,"printf",t.java(117:14-117:20),"printf"
478,DECLAREDREFERENCEEXPRESSION,"deFora",t.java(117:41-117:47),"deFora"
479,LITERAL,"",t.java(117:21-117:30),"""%d %d\n"""
480,DECLAREDREFERENCEEXPRESSION,"ngrupos",t.java(117:32-117:39),"ngrupos"
481,MEMBEREXPRESSION,"out",t.java(117:3-117:13),"System.out"
